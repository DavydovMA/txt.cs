Project         : txt.cs
Release version : 1.6.43
Last update     : 2018-10-01
------------- ---- ------
file            : cs_01.txt

Память.

1. Память.

    Неисправная память может приводить к искажению данных, программ, нестабильной работе компьютера и потере данных.

1.1. Назначение. Типы памяти.

    Следуя из названия основное предназначение памяти - это хранить данные, в виде битов или байт. В зависимости от возлагаемых задач и возможностей память делится на три основных типа, но и их комбинации встречаются:
      1. ПЗУ
      2. ОЗУ
      3. ВЗУ
    Каждый тип имеет право на свое существование безусловно.

1.2. ROM. ПЗУ.

    ROM - (не наше слово однозначно), является абревиатурой от Read Only Memory и расскрывает смысл Память Только для Чтения. Существуют и другие названия. ПЗУ  - Постоянно Запоминающее Устройство. ППЗУ - Перепрограммируемое ПЗУ. РПЗУ - Репрограммируемое ПЗУ. И еще найдется... имет смысл обращать внимание на корень ROM или ПЗУ.
    Данный вид памяти обладает свойством при отключении питания данные никуда не исчезают и после восстановления питания могут быть снова считаны. Теоретически данные должны быть записаны один раз и никогда не меняться.
    Каждый компьютер обладает хотя бы одной микросхемой (чипом) данной памяти. Эту микросхему готовят на заводе изготовителе, вставляют в специальный разъем или припаивают намертво. Эта микросхема содержит в первую очередь программы самопроверки и самоконтроля запускающиеся каждый раз при включении компьютера, программы взаимодействия со всем окружением (порты, разъемы, вставленные платы, подключенные диски и прочие устройства). Все программы самодостаточны и могут работать автономно даже если на компьютере нет оперативной памяти, не подключен монитор и клавиатура. Основная цель набора этих программ осуществить начальный запуск компьютера. Повреждение данной микросхемы лишает предоставленных возможностей компьютер.
    Дополнительно данный вид памяти встречается на платах расширения, например: видеокарте, сетевой, тюнере, на том же жестком диске и еще много где - ищущий находит. Главное уяснить МИНИМУМ одна такая точно есть.
    Для полного понимания взглянем на микросхему изнутри в виде предохранителей (ну уж предохранитель должны представлять!). Предохранитель обладает одним замечательным свойством, он без проблем проводит электричество до тех пор пока все в допустимых пределах, при превышении которых он перегоряет и перестает пропускать электричество.


    +5V  <---+
             |
             +--[~~~]---> +5v <---+  =  (1)
             |                    |
             +--[~~~]---> +5v <---+  =  (1)
             |                    |
             +--[~~~]---> +5v <---+  =  (1)
             |                    |
             +--[~~~]---> +5v <---+  =  (1}
                                  |
                                -----
                                 ---
                                  -


    Вновь созданная микросхема имеет исправные связи, все предохранители целы, при подаче напряжения мы видим (считываем) 4 сигнала (тетрада), все (1). Считываем 1111b или fh.
    Допустим нам надо записать значение 0101b или 5h. Для этого на заводе изготовителе сжигают не нужные предохранители.




    +5V  <---+                    +---> -5V
             |                    |
             +--[xxx]---> 10v <---+
             |                    |
             +--[~~~]--->  0v     |
             |                    |
             +--[xxx]---> 10v <---+
             |
             +--[~~~]--->  0v


    При повторном считывании получаем код 0101b или 5h, то что и требовалось.




    +5V  <---+
             |
             +--[   ]--->  0v <---+  =  (0)
             |                    |
             +--[~~~]---> +5v <---+  =  (1)
             |                    |
             +--[   ]--->  0v <---+  =  (0)
             |                    |
             +--[~~~]---> +5v <---+  =  (1}
                                  |
                                -----
                                 ---
                                  -


    Обратите внимание в данном конкретном случае процесс однонаправленный. Отсюда должно прийти понимание почему память предназначена только для чтения. Этот процесс называется прожигом. Раньше так и было и занимал этот процесс довольно длительный период времени.
    Но ничего не стоит на месте, и появились новые технологии и уже стало возможным восстанавливать связи, пусть по началу тоже длительным процессом, а потом и вовсе очень быстро, даже очень быстро. И появилось понятие Перепрошивка, и вот на это можно взглянуть двояко. Сразу отмечу такой нюанс как допустимое количество циклов перезаписи.
    С одной стороны очень удобно, не нужно обращаться в сервисный центр чтобы обновить данные в микросхеме, получить улучшения и дополнительные "печеньки", а то и вовсе произвести восстановление.
    С другой стороны никто не мешает кому-нибудь подменить данные. Например стерев все ее содержимое, и вот компьютер груда железа и слезы, слезы... (вир.чернобыль). А может подменить данные подмешав свой код, и все что вы вводите с клавиатуры не такая уже тайна, не нужно заглядывать через плечо на экран, диск, сеть... Кстати вы всегда держите в поле зрения свой компьютер (поверьте не спасет)?
    С одной стороны можно попытаться взять под контроль данный момент, на стационарном компьютере переставить перемычку, на прочих вооружиться сервисмануалом и паяльником. Но помните о существовании перемычки известно не только вам, да и паяльник умеют держать разные руки.
    Если все-таки есть причины для беспокойства, изучите свое хозяйство. Научитесь производить самостоятельно перепрошивку, не зацикливаясь на встроенных возможностях перепрошивки (если уже есть подозрения можно ли доверять скомпрометированному). Запаситесь разными версиями (последняя и предпоследняя) прошивок. Откатились назад, обновились, и снова чистая версия. Не забываем про допустимое количество циклов перезаписи.
    Если речь идет о ПЗУ компьютера, то содержимое называют BIOS (Basic Input Output System) Начальная Система Вводв Вывода или UEFI (Unified Extensible Firmware Interface) понимаю, но дословно переводить не рискую. BIOS считается устаревшим вариантом (каждый вправе считать так как ему хочется), UEFI новым. У каждого есть свои плюсы и минусы. Конечно же достойный плюс UEFI не имея Операционной Системы можно получить теже "плюшки" по минимуму. Но это все уже уходит в другую плоскость обсуждения.
    Как бы то там ни было, но при детальном изучении и постоянном технологическом прогрессе оказывается, что там много свободного пространства и есть где развернуться.

1.3. RAM. ОЗУ.

    RAM - (снова ненашенское слово) Random Access Memory, дословный перевод поражает, поэтому сами переводите. ОЗУ - Оперативно Запоминающее Устройство.
    Данный вид памяти обладает одним замечательным свойством, она противоречит законам термодинамики, при отключении питания все содержащиеся данные бесследно исчезают (фокус-покус), а при подключении вновь не могут быть восстановлены. До тех пор пока подается питание память может хранить данные. В отличии от ПЗУ данный вид памяти может изменять содержимое и делает это очень, очень, очень быстро, при этом обладая практически неограниченным ресурсом циклов перезаписи.
    В основном ее используют для загрузки программ и их дальнейшего запуска (именно процесс загрузки в ОЗУ Операционной Системы напрягает нетерпеливых). Программы в свою очередь используют ее для сохранения своих данных. Согласитесь удобно, загрузил одну программу, запустил, надоело, на тоже место загрузил другую программу, запустил, быстро и без ограничений. А еще удобней загрузил программу запустил, источник убрал подальше и пока питание есть программа работает, а как питание пропало, то ничего и не было.
    Вспоминая свой первый компьютер, аж с 32Кб ОЗУ по тем временам играл в шахматы, и взирая на текущие возможности поражаюсь прожорливости программ и пользователей.
    Конечно же ОЗУ можно использовать иначе. Например создать электронный диск в ОЗУ, ничем не отличимый внешне от других (ВЗУ), но при этом очень быстрый как сама ОЗУ, а в случае чего диск со всем его содержимым исчезает. Можно и без дисков много чего хранить, зависит от возникающих задач, а прежде всего от вашей фантазии.

    А теперь немного о гибридах ОЗУ-ПЗУ. Да мне встречались в жизни микросхемы обладающие возможностями ОЗУ и ПЗУ одновременно. Почему не прижились? Возможно из-за малой емкости, недостаточного быстродействия и стоимости. Технологии не стоят на месте и уже трудно провести четкую грань по типам, скорей проще по методу применения и использования. Поэтому рекомендую заранее изучить свое хозяйство, тем более перед приобретением.

1.4. ВЗУ.

    ВЗУ - Внешнее Запоминающее устройство.
    Данный вид памяти обладает максимальной вместительностью по отношению к ПЗУ и ОЗУ, значительно медленней ПЗУ и ОЗУ, имеется возможность перезаписи (как ОЗУ только с ограничением циклов перезаписи), при отключении питания данные сохраняются (как ПЗУ).
    Если компьютеры между собой ничем не связаны, ВЗУ позволяет осуществить обмен данных.
    Перечислять все их разновидности неблагодарное дело, имя им легион, но хоть что-то озвучим.
    Дампы. Знакомое слово. Программы и данные можно представлять в виде распечаток дампов (да хоть на камне зубилом выбейте), а затем ввести вновь. Сам помню как набивал из журналов.
    Перфокарта. Перфолента. Разновидность бумажных носителей, в виде карт или лент, где содержимое бита определялось наличием/отсутствием отверстия. Кстати достаточно быстро работает.
    ROM-Диски. Набор ПЗУ спаянных в один большой носитель. Кстати идея актуальна и по сей день. У кого-нибудь есть поломанная видеокарта с ПЗУ, не спешите выкидывать ;) .
    Магнитная лента. Многие застали их даже в бытовых магнитофонах. Вместо привычных мелодий записывались данные. Содержимое бита определялось либо частотой, либо направленностью (полярностью) записи. Звучание зависило от реализации, тем кому интересно посмотрите фильм Терминатор.
    Дискета. Уже редкость, но еще можно встретить. По сути небольшая пластиковая пластинка спрятанная в конвертик. Метод записи как и у магнитной ленты.
    НЖМД - Накопитель Жесткий Магнитный Диск. Тот самый жесткий диск. Сложная дискета. Пластинка уже не пластмассовая, а металлическая. Вместо простенького чехольчика массивный металлический корпус, который защищает не только от шаловливых пальчиков, но и электромагнитного воздействия. Имеется плата управления механикой, моторчиками и головками чтения/записи. Принцип записи как у магнитной ленты.
    Магнитооптические. Видел, щупал, забыл как и все что это такое было.
    CD-ROM. DVD-ROM. M-Disk-DVD v Blu-Ray. Такие переливающиеся пластинки на солнце, девушкам нравятся, не были бы такими большими носили бы вместо сережек, водители верят в преломление чего-то там когда на них направлен радар (создатели F-117A нервно курят в стороне, а мы не будем заниматься оскорблением чувств верующих). Для считывания/записи применяется лазер. Содержимое бита определяется отражающей способностью поверхности. Типа ROM - не перезаписываемые. Типа R - однократнозаписывае. RW - перезаписываеме с ограничением цикла перезаписи. Кстати очень надежны и долговечны.
    USB. SD. SSD. Те самые флешки и карточки. Тот самый современный гибрид ПЗУ-ОЗУ как ВЗУ.
    Понимая принцип хранения информации на том или ином носителе можно понять принцип в следствии чего данные могут быть безвозвратно утеряны. Камни растаскиваются дачниками под строительство. Бумажные хорошо горят (порванное склеивается). Магнитные подвержены электромагнитному воздействию, пластик плавится, металл царапается и гнется (платы хоть и ломаются, но могут быть заменены, тоже самое относится и к механике). Та самая отражающая поверхность хорошо царапается и отслаивается (девушкам на блески). Карбонат лопается на мелкие кусочки и гибнет в огне. Микросхемы легко выходят из строя при прямом электрическом разряде, да и сами по себе хрупки, предназначенные для бытового применения боятся огня. (Наглядный материал был утерян после моего похищения :( ) Вообще где-то записано - огонь все пожирающий.
    Именно на ВЗУ пользователи хранят все свои данные. Все данные хранящиеся на ВЗУ четко систематизированы, и на это можно посмотреть двояко.

1.4.1. Sector. Сектор.

    ВЗУ размечен на куски, которые называют секторами (адресация осуществляется на основе: цилиндры, головки... сейчас не важно). Так исторически сложилось, что стандартным считается сектор размером 512 байт и это число еще не раз мелькнет далее. Сектор это минимальная размерность, с которой работает ВЗУ. Т.е. если вам надо записать один байт данных, на ВЗУ будет использовано пространство размером один сектор (512 байт). Если надо записать 512 байт данных, при условии использования стандартной размерности, на ВЗУ будет использовано пространство размером один сектор (512 байт). Если надо записать 513 байт данных, при условии использования стандартной размерности, на ВЗУ будет использовано пространство размером два сектора (1024 байта). Ну и т.д. Уловили? Записывая 512 раз по 1 байту данных раздельно будет израсходовано 512 раз * 512 секторов = 262144 байт. Все это должно наводить на интересные мысли о том как бесцельно порою простаивает место на ВЗУ. Давайте взглянем на один сектор, ведь лучше один раз увидеть чем сто раз услышать.


    -----------------------------------------------------------------------
    | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
    -----------------------------------------------------------------------
     |
     +------------------------+
                              |
                              V
/-------------------------------------------------------\
00000000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000000a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000000b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000000c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000000d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000000e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000000f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000001a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000001b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000001c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000001d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000001e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000001f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    = 512b


    Но как помнится в началах времен так было не всегда, и каждый сам был волен выбирать размерность сектора кратную дампу. Да и сейчас никто этого не запрещает. Есть понятие низкоуровневое форматирование (чем современней носитель, тем больше негодования он выказывает к этому подходу). Размерность сектора влияет только на надежность записи/хранения/считывания. Но сколько неразберихи и запутанностей может внести.

1.4.2. File System. Файловая система.

    Файловая система - это способы и методы хранения и управления данными в виде файлов. Своего рода вид складского УЧЕТА, только данных. Все пронумеровано, все описано, известно что и где лежит, сколько, как называется, когда пропало, что пропало и сколько. Не то чтобы без этой системы тяжело непосредственно сохранять данные на ВЗУ, а потом считывать обратно в ОЗУ, скорей утомляет, вносит неразбериху и мешает кому-то "шить".
    И как не единым складским учетом обрабатываются все склады на необъятной, так и не единая Файловая система существует.
    ист.man fs


       ext, ext2, ext3, ext4, hpfs, iso9660, JFS, minix, msdos, ntfs, Reiserfs, umsdos, vfat, XFS...


    Конечно же это не полный перечень. Что-то знаете, что-то слышали, а что-то нет, и вообще тут запутаешься.
    Зачем такое множество? Каждая новая Файловая система привносит улучшения, надежность, новые "печеньки", но не каждому кладовщику это порой выгодно, а вот надзирающему - да. Например, при переходе на файловом сервере с ext3 на Reiserfs на 500GiB диске высвободилось около 20GiB пространства. Или, на первом компьютере используется vfat на втором ntfs, после внезапного отключения питания вероятность восстановления данных (части работы) на втором компьютере во много раз выше. А на первом сколько не пытайся сохранить файл больше 4GiB ничего не получится, будет вылетать постоянно ошибка. Только одних fat три разновидности fat12, fat16, fat32. Это эволюционная составляющая.

1.4.3. Block. Блок.

    Конечно же, новое быстрей, удобней, гибче, но если мы привыкли на складе работать по старому и менять не хочется, и персонал переучивать не хочется, с 10 полками и 10 видами товара, вести так книги учета и иметь единую нумерацию (время деньги), а самое главное кладовщик проверенный и ни разу не подвел. Мы не против чтобы был больше оборот, но склад уже не резиновый и рассыпается. Нам дают новый склад в котором 100 полок и как теперь вести учет? Использовать 10 полок, а про 90 забыть, так мы ничего не выигрываем. Чтобы и учет вести по старому и объемы увеличить остается объединить полки в блоки каждый блок по 10 полок.
    Вот так и с файловыми системами. И они уже оперируют не секторами, а блоками и в зависимости от обстоятельств размер блоков разный. И поняте Block нам еще пригодится в дальнейшем.
    ист.fsstat /dev/sd*


CONTENT INFORMATION
--------------------------------------------
Block Range: 0 - 219491
Block Size: 4096
Free Blocks: 215822


    Например в данном разделе ВЗУ один блок имеет размер 4096 байт и занимает 8 секторов на ВЗУ.


    -----------------------------------------------------------------------
    | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
    -----------------------------------------------------------------------
     |
     +---------------------+
                           |
                           V
/-------------------------------------------------------\
00000000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000000a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000000b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000000c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000000d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000000e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000000f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000100: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000110: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000160: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000001a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000001b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000001c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000001d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000001e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000001f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    = 512b
00000200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000210: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000220: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000002a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000002b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000002c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000002d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000002e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000002f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000003a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000003b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000003c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000003d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000003e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000003f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    = 1024b
00000400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000420: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000430: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000004a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000004b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000004c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000004d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000004e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000004f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000005a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000005b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000005c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000005d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000005e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000005f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    = 1536b
00000600: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000610: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000620: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000630: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000640: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000006a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000006b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000006c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000006d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000006e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000006f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000007a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000007b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000007c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000007d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000007e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000007f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    = 2048b
00000800: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000810: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000820: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000830: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000850: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000860: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000870: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000880: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000890: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000008a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000008b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000008c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000008d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000008e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000008f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000900: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000910: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000920: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000930: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000940: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000950: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000009a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000009b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000009c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000009d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000009e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
000009f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    = 2560b
00000a00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000a10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000a20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000a30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000a40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000a50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000a60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000a70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000a80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000a90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000aa0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000ab0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000ac0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000ad0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000ae0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000af0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000b00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000b10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000b20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000b30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000b40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000b50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000b60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000b70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000b80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000b90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000ba0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000bb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000bc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000bd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000be0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000bf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    = 3072b
00000c00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000c10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000c20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000c30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000c40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000c50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000c60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000c70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000c80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000c90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000ca0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000cb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000cc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000cd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000ce0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000cf0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000d00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000d10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000d20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000d30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000d40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000d50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000d60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000d70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000d80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000d90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000da0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000db0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000dc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000dd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000de0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000df0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    = 3584b
00000e00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000e10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000e20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000e30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000e40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000e50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000e60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000e70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000e80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000e90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000ea0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000eb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000ec0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000ed0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000ee0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000ef0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000f00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000f10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000f20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000f30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000f40: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000f50: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000f60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000f70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000f80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000f90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000fa0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00000ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00    = 4096b


    Как говорится почувствуйте разницу. И снова таже самая история как и с сектором. Если нам нужно записать один байт данных, то на данной файловой системе будет израсходован один блок размером 4096 байт, а на самом ВЗУ 8 секторов. А теперь посчитайте сами если сохранить 512 раз раздельно по 1 байту данных сколько будет использовано (чтобы не спали)?

1.4.4. Принципы файловой системы.

    Для полного понимания вопроса мы рассмотрим сильно УПРОЩЕННУЮ некую абстрактную файловую систему ФС-1.

1.4.4.1. Корневая Таблица.

    Файловая система как минимум содержит корневую [\] Таблицу со списком файлов и содержит поля:
      name  - имя или название файла;
      begin - указатель или адрес начала файла;
      size  - размер или количество занимаемых блоков/секторов;
      other - дополнительная информация.


    ФС-1
+-->name    begin   size    other
|   [\]     0       1       DIR     ---+
|                                      |
|    +---------------------------------+
|    |
|    V
|    0 1 ...
|   -----------------------------------------------------------------------
|   |T| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
|   -----------------------------------------------------------------------
|    |
+----+


    ФС-1. [\] Таблица    начинается с [0] блока и занимает 1 блок [T].
    ФС-1. Начиная с [1] блока все пространство ВЗУ свободно.
    Обычно так выглядит вновь приобретенное ВЗУ. Затем подключаете ВЗУ к компьютере и начинается таинство. Давайте попробуем заглянуть за эту завесу.

1.4.4.2. Файл. Создание.

    Что такое файл и как создается? Допустим был запущен редактор, во время работы вся информация обрабатывается и хранится в ОЗУ. По команде Данные хранящиеся в ОЗУ записываются/сохраняются в ФС-1 в виде Блока данных с указанным названием [AAA.txt].


    ФС-1
+-->name    begin   size    other
|   [\]     0       1       DIR     ---+
|   AAA.txt 1       1       -       ---|-+
|                                      | |
|      +-------------------------------|-+
|    +-|-------------------------------+
|    | |
|    V V
|    0 1 2 ...
|   -----------------------------------------------------------------------
|   |T|A| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | <== write == [ RAM ]
|   -----------------------------------------------------------------------
|    |
+----+


    ФС-1. [\] Таблица    начинается с [0] блока и занимает 1 блок [T].
    ФС-1. [AAA.txt] Файл начинается с [1] блока и занимает 1 блок [A].
    ФС-1. Начиная с [2] блока все пространство ВЗУ свободно.
    В [\] Таблице создается новая запись о файле с указанием названия, начала хранения и размера. Блок данных из ОЗУ записывается в отведенном пространстве на ВЗУ.
    Файлы могут быть разного размера и если одного блока недостаточно предоставляются дополнительные блоки. Создадим файл [BBB.txt] размером побольше.


    ФС-1
+-->name    begin   size    other
|   [\]     0       1       DIR     ---+
|   AAA.txt 1       1       -       ---|-+
|   BBB.txt 2       2       3       ---|-|-+
|                                      | | |
|        +-+---------------------------|-|-+
|      +-|-|---------------------------|-+
|    +-|-|-|---------------------------+
|    | | | |
|    V V V V
|    0 1 2 3 4 ...
|   -----------------------------------------------------------------------
|   |T|A|B|B| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | <== write == [ RAM ]
|   -----------------------------------------------------------------------
|    |
+----+


    ФС-1. [\] Таблица    начинается с [0] блока и занимает 1 блок [T].
    ФС-1. [AAA.txt] Файл начинается с [1] блока и занимает 1 блок [A]. Без изменений.
    ФС-1. [BBB.txt] Файл начинается с [2] блока и занимает 2 блок [B], отметка второй блок [3].
    ФС-1. Начиная с [4] блока все пространство ВЗУ свободно.
    Файлу было предоставлено больше блоков.

1.4.4.3. Считывание.

    Попробуем считать любой файл или посмотреть список файлов в [\] Таблице.


    ФС-1
+-->name    begin   size    other
|   [\]     0       1       DIR     ---+
|   AAA.txt 1       1       -       ---|-+
|   BBB.txt 2       2       3       ---|-|-+
|                                      | | |
|        +-+---------------------------|-|-+
|      +-|-|---------------------------|-+
|    +-|-|-|---------------------------+
|    | | | |
|    V V V V
|    0 1 2 3 4 ...
|   -----------------------------------------------------------------------
|   |T|A|B|B| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | == read ==> [ RAM ]
|   -----------------------------------------------------------------------
|    |
+----+


    ФС-1. [\] Таблица    начинается с [0] блока и занимает 1 блок [T]. Без изменений.
    ФС-1. [AAA.txt] Файл начинается с [1] блока и занимает 1 блок [A]. Без изменений.
    ФС-1. [BBB.txt] Файл начинается с [2] блока и занимает 2 блок [B], отметка второй блок [3]. Без изменений.
    ФС-1. Начиная с [4] блока все пространство ВЗУ свободно. Без изменений.
    Считывание файла в ОЗУ или просмотр [\] Таблицы ТЕОРЕТИЧЕСКИ ничего не изменяет.

1.4.4.4. Копирование.

    При копировании создается новый файл, содержимое которого идентично источнику. Скопируем файл [BBB.txt]. [\] Таблица не допускает двух одинаковых названий поэтому копии дадим новое имя [CCC.txt]. (Каждое название по сути это набор байт, а байты это числа, два одинаковых числа не то что путают, берется то что первей под руку попадется постоянно/качели/рандомно ).


    ФС-1
+-->name    begin   size    other
|   [\]     0       1       DIR     ---+
|   AAA.txt 1       1       -       ---|-+
|   BBB.txt 2       2       3       ---|-|-+
|   CCC.txt 4       2       5       ---|-|-|-+
|                                      | | | |
|            +-+-----------------------|-|-|-+
|        +-+-|-|-----------------------|-|-+
|      +-|-|-|-|-----------------------|-+
|    +-|-|-|-|-|-----------------------+
|    | | | | | |
|    V V V V V V
|    0 1 2 3 4 5 6 ...
|   -----------------------------------------------------------------------
|   |T|A|B|B|C|C| | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
|   -----------------------------------------------------------------------
|    |
+----+


    ФС-1. [\] Таблица    начинается с [0] блока и занимает 1 блок [T].
    ФС-1. [AAA.txt] Файл начинается с [1] блока и занимает 1 блок [A]. Без изменений.
    ФС-1. [BBB.txt] Файл начинается с [2] блока и занимает 2 блок [B], отметка второй блок [3]. Без изменений.
    ФС-1. [CCC.txt] Файл начинается с [4] блока и занимает 2 блок [C], отметка второй блок [5].
    ФС-1. Начиная с [6] блока все пространство ВЗУ свободно.
    Содержимое файлов [BBB.txt] и [ССС.txt] идентично несмотря на то, что это разные записи в [\] Таблице и содержимое хранится в разных блоках.
    В зависимости от реализации процесс копирования может выполняться: через ОЗУ, непосредственно на уровне ВЗУ. В любом случае процесс похож на создание нового файла.
    Копирование дублирует содержимое файла. Есть программы отыскивающие файлы с одинаковым содержимым.

1.4.4.5. Удаление.

    Наличие копии, для экономии места на ВЗУ, позволяет нам удалить один из файлов. Победила молодость - удаляем файл [BBB.txt].


    ФС-1
+-->name    begin   size    other
|   [\]     0       1       DIR     ---+
|   AAA.txt 1       1       -       ---|-+
|   BBB.txt 2       2       3,DEL   ---|-|-+
|   CCC.txt 4       2       5       ---|-|-|-+
|                                      | | | |
|            +-+-----------------------|-|-|-+
|        +-+-|-|-----------------------|-|-+
|      +-|-|-|-|-----------------------|-+
|    +-|-|-|-|-|-----------------------+
|    | | | | | |
|    V V V V V V
|    0 1 2 3 4 5 6 ...
|   -----------------------------------------------------------------------
|   |T|A|B|B|C|C| | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
|   -----------------------------------------------------------------------
|    |
+----+


    ФС-1. [\] Таблица    начинается с [0] блока и занимает 1 блок [T].
    ФС-1. [AAA.txt] Файл начинается с [1] блока и занимает 1 блок [A]. Без изменений.
    ФС-1. [BBB.txt] Файл начинается с [2] блока и занимает 2 блок [B], отметка второй блок [3], DEL.
    ФС-1. [CCC.txt] Файл начинается с [4] блока и занимает 2 блок [C], отметка второй блок [5]. Без изменений.
    ФС-1. Начиная с [6] блока все пространство ВЗУ свободно. Без изменений.
    Обратите внимание ничего кроме появления отметки DEL в [\] Таблице напротив записи [BBB.txt] не изменилось. При опросе файловой системы СТАНДАРТНЫМИ методами, файлы имеюшие отметку DEL не отображаются, а блоки считаются УЖЕ свободными, но содержимое продолжает существовать. Никто не запрещает посмотреть [\] Таблицу иными методами. Это нормальный режим работы для большинства файловых систем (и не только). Нет смысла тратить время на лишние перезаписи, по отметке DEL уже понятно какие записи в Таблице и какие блоки свободны. Иначе процесс стирания займет ровно столько времени сколько ушло при создании. Если это один файл и малого размера будет малозаметно, а если файлов много и размеры большие, плюс не забываем про износ (поверхностей, механики, ограничений циклов перезаписи и т.п.).
    Удаление файла не значит, что его содержимое прекратило свое полное существование.

1.4.4.6. Файл директория.

    Рассмотрим другой тип файла директория/каталог/папка. Обратите внимание [\] Таблица по сути это тот же самый файл, только имещий отметку DIR, а данные содержат список файлов. Никто не мешает сделать еще, например [DDD.txt].


    ФС-1
+-->name    begin   size    other
|   [\]     0       1       DIR     ---+
|   AAA.txt 1       1       -       ---|-+
|   BBB.txt 2       2       3,DEL   ---|-|-+
|   CCC.txt 4       2       5       ---|-|-|-+
|   DDD.txt 2       1       DIR     ---|-|-|-|-+
|                                      | | | | |
|        +-----------------------------|-|-|-|-+
|        |   +-+-----------------------|-|-|-+
|        | +-|-|-----------------------|-|-+
|      +-|-|-|-|-----------------------|-+
|    +-|-|-|-|-|-----------------------+
|    | | | | | |
|    V V V V V V
|    0 1 2 3 4 5 6 ...
|   -----------------------------------------------------------------------
|   |T|A|D|B|C|C| | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
|   -----------------------------------------------------------------------
|    |   |
+----+   |
         |
+--------+
|
+-->name    begin   size    other


    ФС-1. [\] Таблица       начинается с [0] блока и занимает 1 блок [T].
    ФС-1. [AAA.txt] Файл    начинается с [1] блока и занимает 1 блок [A]. Без изменений.
    ФС-1. [BBB.txt] Файл    начинается с [2] блока и занимает 2 блок [B], отметка второй блок [3], DEL. Без изменений.
    ФС-1. [CCC.txt] Файл    начинается с [4] блока и занимает 2 блок [C], отметка второй блок [5]. Без изменений.
    ФС-1. [DDD.txt] Таблица начинается с [2] блока и занимает 1 блок [D], отметка DIR.
    ФС-1. Начиная с [6] блока все пространство ВЗУ свободно. Без изменений.
    Если до этого у нас формировался линейный список и поступательно распределялись блоки, то теперь все начинает переплетаться. В [\] Таблице была создана новая запись [DDD.txt] и был взят первый свободный блок [2]. Поэтому часть файла [BBB.txt] была перезаписана данными [DDD.txt], а часть продолжает существование в блоке [3]. Принцип рапределения блоков зависит от реализации файловой системы и самого ВЗУ. Например на современных ВЗУ скорей всего был бы выделен [6] блок. Тоже самое справедливо и для самой записи [BBB.txt] в [\] Таблице.
    Если смущает название директории [DDD.txt], точнее расширение, то термин расширение не везде применим и МОЖЕТ быть использован исключительно для удобства. Например, в самом начале был создан файл [AAA.txt], а вот какой конкретно редактор для его создания был использован намеренно не было указано. Содержимое вкладывает человек, а не название.
    Процесс похож на создание нового файла. У нас появляется дополнительная Таблица со списком файлов. Появляется иерархическое построение (директория в директории).
    Запись нового файла может перезаписать содержимое удаленного файла, но при наличии свободного пространства перезапись не гарантируется.

1.4.4.7. Копирование в другую директорию.

    Мы уже делали копирование файла, но как это выглядит если скопировать файл в новую директорию. Копируем файл [AAA.txt] в [DDD.txt] Таблицу, название допускается прежнее.


    ФС-1
+-->name    begin   size    other
|   [\]     0       1       DIR     ---+
|   AAA.txt 1       1       -       ---|-+
|   BBB.txt 2       2       3,DEL   ---|-|-+
|   CCC.txt 4       2       5       ---|-|-|-+
|   DDD.txt 2       1       DIR     ---|-|-|-|-+
|                                      | | | | |
|                +---------------------|-|-|-|-|-------------------------------+
|        +-------|---------------------|-|-|-|-+                               |
|        |   +-+-|---------------------|-|-|-+                                 |
|        | +-|-|-|---------------------|-|-+                                   |
|      +-|-|-|-|-|---------------------|-+                                     |
|    +-|-|-|-|-|-|---------------------+                                       |
|    | | | | | | |                                                             |
|    V V V V V V V                                                             |
|    0 1 2 3 4 5 6 7 ...                                                       |
|   -----------------------------------------------------------------------    |
|   |T|A|D|B|C|C|A| | | | | | | | | | | | | | | | | | | | | | | | | | | | |    |
|   -----------------------------------------------------------------------    |
|    |   |                                                                     |
+----+   |                                                                     |
         |                                                                     |
+--------+                                                                     |
|                                                                              |
+-->name    begin   size    other                                              |
    AAA.txt 6       1       -       -------------------------------------------+


    ФС-1. [\] Таблица       начинается с [0] блока и занимает 1 блок [T]. Без изменений.
    ФС-1. [AAA.txt] Файл    начинается с [1] блока и занимает 1 блок [A]. Без изменений.
    ФС-1. [BBB.txt] Файл    начинается с [2] блока и занимает 2 блок [B], отметка второй блок [3], DEL. Без изменений.
    ФС-1. [CCC.txt] Файл    начинается с [4] блока и занимает 2 блок [C], отметка второй блок [5]. Без изменений.
    ФС-1. [DDD.txt] Таблица начинается с [2] блока и занимает 1 блок [D], отметка DIR.
    ФС-1. [AAA.txt] Файл    начинается с [6] блока и занимает 1 блок [A].
    ФС-1. Начиная с [7] блока все пространство ВЗУ свободно. Без изменений.
    На этот раз под новый файл был выделен [6] блок. Обратите внимание у нас теперь два файла с одинаковым названием, но в разных Таблицах, указывают на разные блоки, но содержимое одинаковое.

1.4.4.8. Перемещение.

    Что-то мне подсказывает придеться переместить файл [CCC.txt] в диреткорию [DDD.txt].


    ФС-1
+-->name    begin   size    other
|   [\]     0       1       DIR     ---+
|   AAA.txt 1       1       -       ---|-+
|   BBB.txt 2       2       3,DEL   ---|-|-+
|   CCC.txt 4       2       5,FREE  ---|-|-|-+
|   DDD.txt 2       1       DIR     ---|-|-|-|-+
|                                      | | | | |
|                +---------------------|-|-|-|-|-------------------------------+
|        +-------|---------------------|-|-|-|-+                               |
|        |   +-+-|---------------------|-|-|-+---------------------------------|-+
|        | +-|-|-|---------------------|-|-+                                   | |
|      +-|-|-|-|-|---------------------|-+                                     | |
|    +-|-|-|-|-|-|---------------------+                                       | |
|    | | | | | | |                                                             | |
|    V V V V V V V                                                             | |
|    0 1 2 3 4 5 6 7 ...                                                       | |
|   -----------------------------------------------------------------------    | |
|   |T|A|D|B|C|C|A| | | | | | | | | | | | | | | | | | | | | | | | | | | | |    | |
|   -----------------------------------------------------------------------    | |
|    |   |                                                                     | |
+----+   |                                                                     | |
         |                                                                     | |
+--------+                                                                     | |
|                                                                              | |
+-->name    begin   size    other                                              | |
    AAA.txt 6       1       -       -------------------------------------------+ |
    CCC.txt 4       2       5       ---------------------------------------------+


    ФС-1. [\] Таблица       начинается с [0] блока и занимает 1 блок [T].
    ФС-1. [AAA.txt] Файл    начинается с [1] блока и занимает 1 блок [A]. Без изменений.
    ФС-1. [BBB.txt] Файл    начинается с [2] блока и занимает 2 блок [B], отметка второй блок [3], DEL. Без изменений.
    ФС-1. [CCC.txt] Файл    начинается с [4] блока и занимает 2 блок [C], отметка второй блок [5], FREE.
    ФС-1. [DDD.txt] Таблица начинается с [2] блока и занимает 1 блок [D], отметка DIR.
    ФС-1. [AAA.txt] Файл    начинается с [6] блока и занимает 1 блок [A]. Без изменений.
    ФС-1. [CCC.txt] Файл    начинается с [4] блока и занимает 2 блок [C], отметка второй блок [5].
    ФС-1. Начиная с [7] блока все пространство ВЗУ свободно. Без изменений.
    В [DDD.txt] Таблице создается новая запись о файле [CCC.txt] полностью идентичная в [\] Таблице. В [\] Таблице в записи о файле [CCC.txt] ставится отметка FREE. Отметка FREE говорит о том что в таблице данная запись свободна и не должна отображаться.
    Перемещение файла в пределах одной Файловой системы производит изменения только в Таблицах.

1.4.4.10. Перемешение через Копирование и Удаление.

    Но не всегда. Все зависит от реализации и об это нужно помнить. Например давайте удалим файл [AAA.txt] в [\] Таблице.


    ФС-1
+-->name    begin   size    other
|   [\]     0       1       DIR     ---+
|   AAA.txt 1       1       DEL     ---|-+
|   BBB.txt 2       2       3,DEL   ---|-|-+
|   CCC.txt 4       2       5,FREE  ---|-|-|-+
|   DDD.txt 2       1       DIR     ---|-|-|-|-+
|                                      | | | | |
|                +---------------------|-|-|-|-|-------------------------------+
|        +-------|---------------------|-|-|-|-+                               |
|        |   +-+-|---------------------|-|-|-+---------------------------------|-+
|        | +-|-|-|---------------------|-|-+                                   | |
|      +-|-|-|-|-|---------------------|-+                                     | |
|    +-|-|-|-|-|-|---------------------+                                       | |
|    | | | | | | |                                                             | |
|    V V V V V V V                                                             | |
|    0 1 2 3 4 5 6 7 ...                                                       | |
|   -----------------------------------------------------------------------    | |
|   |T|A|D|B|C|C|A| | | | | | | | | | | | | | | | | | | | | | | | | | | | |    | |
|   -----------------------------------------------------------------------    | |
|    |   |                                                                     | |
+----+   |                                                                     | |
         |                                                                     | |
+--------+                                                                     | |
|                                                                              | |
+-->name    begin   size    other                                              | |
    AAA.txt 6       1       -       -------------------------------------------+ |
    CCC.txt 4       2       5       ---------------------------------------------+


    ФС-1. [\] Таблица       начинается с [0] блока и занимает 1 блок [T].
    ФС-1. [AAA.txt] Файл    начинается с [1] блока и занимает 1 блок [A], отметка DEL.
    ФС-1. [BBB.txt] Файл    начинается с [2] блока и занимает 2 блок [B], отметка второй блок [3], DEL. Без изменений.
    ФС-1. [CCC.txt] Файл    начинается с [4] блока и занимает 2 блок [C], отметка второй блок [5], FREE. Без изменений.
    ФС-1. [DDD.txt] Таблица начинается с [2] блока и занимает 1 блок [D], отметка DIR. Без изменений.
    ФС-1. [AAA.txt] Файл    начинается с [6] блока и занимает 1 блок [A]. Без изменений.
    ФС-1. [CCC.txt] Файл    начинается с [4] блока и занимает 2 блок [C], отметка второй блок [5]. Без изменений.
    ФС-1. Начиная с [7] блока все пространство ВЗУ свободно. Без изменений.
    Файл [AAA.txt] в [\] Таблице удален, но перед этим мы его скопировали в [DDD.txt] Таблицу, по сути мы осуществили перемещение файла.
    Перемещение файла в пределах одной Файловой системы через Копирование и Удаление равносильно двум этим действиям. На некотрых Файловых системах именно так оно и выполняется.

1.4.4.11. Перемещение между Файловыми системами.

    Перемещение может быть осуществленно и между Файловыми системами (между ВЗУ не совсем точно, потому что на одном ВЗУ может быть несколько разделов/дисков и каждый со своей Файловой системой). Давайте переместим файл [CCC.txt] в [DDD.txt] Таблице из ФС-1 в ФС-2.


    ФС-1
+-->name    begin   size    other
|   [\]     0       1       DIR     ---+
|   AAA.txt 1       1       DEL     ---|-+
|   BBB.txt 2       2       3,DEL   ---|-|-+
|   CCC.txt 4       2       5,FREE  ---|-|-|-+
|   DDD.txt 2       1       DIR     ---|-|-|-|-+
|                                      | | | | |
|                +---------------------|-|-|-|-|-------------------------------+
|        +-------|---------------------|-|-|-|-+                               |
|        |   +-+-|---------------------|-|-|-+---------------------------------|-+
|        | +-|-|-|---------------------|-|-+                                   | |
|      +-|-|-|-|-|---------------------|-+                                     | |
|    +-|-|-|-|-|-|---------------------+                                       | |
|    | | | | | | |                                                             | |
|    V V V V V V V                                                             | |
|    0 1 2 3 4 5 6 7 ...                                                       | |
|   -----------------------------------------------------------------------    | |
|   |T|A|D|B|C|C|A| | | | | | | | | | | | | | | | | | | | | | | | | | | | | ===|=|== read ==> [ RAM ]
|   -----------------------------------------------------------------------    | |               |
|    |   |                                                                     | |               |
+----+   |                                                                     | |               |
         |                                                                     | |               |
+--------+                                                                     | |               |
|                                                                              | |               |
+-->name    begin   size    other                                              | |               |
    AAA.txt 6       1       -       -------------------------------------------+ |               |
    CCC.txt 4       2       5.DEL   ---------------------------------------------+               |
                                                                                              [     ]
    ФС-2                                                                                         |
+-->name    begin   size    other                                                                |
|   [\]     0       1       DIR     ---+                                                         |
|   CCC.txt 1       2       2       ---|-+                                                       |
|                                      | |                                                       |
|      +-+-----------------------------|-+                                                       |
|    +-|-|-----------------------------+                                                         |
|    | | |                                                                                       |
|    V V V                                                                                       |
|    0 1 2 3 ...                                                                                 |
|   -----------------------------------------------------------------------                      |
|   |T|C|C| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | <======= write == [ RAM ]
|   -----------------------------------------------------------------------
|    |
+----+

    ФС-1. [\] Таблица       начинается с [0] блока и занимает 1 блок [T]. Без изменений.
    ФС-1. [AAA.txt] Файл    начинается с [1] блока и занимает 1 блок [A], отметка DEL. Без изменений.
    ФС-1. [BBB.txt] Файл    начинается с [2] блока и занимает 2 блок [B], отметка второй блок [3], DEL. Без изменений.
    ФС-1. [CCC.txt] Файл    начинается с [4] блока и занимает 2 блок [C], отметка второй блок [5], FREE. Без изменений.
    ФС-1. [DDD.txt] Таблица начинается с [2] блока и занимает 1 блок [D], отметка DIR.
    ФС-1. [AAA.txt] Файл    начинается с [6] блока и занимает 1 блок [A]. Без изменений.
    ФС-1. [CCC.txt] Файл    начинается с [4] блока и занимает 2 блок [C], отметка второй блок [5], DEL.
    ФС-1. [4],[5] и начиная с [7] блока все пространство ВЗУ свободно.
    ФС-2. [\] Таблица       начинается с [0] блока и занимает 1 блок [T].
    ФС-2. [CCC.txt] Файл    начинается с [1] блока и занимает 2 блок [C], отметка второй блок [2].
    ФС-2. Начиная с [3] блока все пространство ВЗУ свободно.
    Содержимое файла [CCC.txt] в [DDD.txt] из ФС-1 считывается в ОЗУ. В ФС-2 осуществляется создание файла с именем [CCC.txt] в [\] Таблице, данные записываются из ОЗУ. В ФС-1 файл [CCC.txt] в [DDD.txt] удаляется.
    Перемещение файла в пределах разных Файловых систем осуществляется через Считывание, Создание и Удаление с использованием ОЗУ.

1.4.4.12. Переименование.

    Переименование файла по своей сути тоже самое перемещение, только в пределах одной Таблицы. Для полноты переименуем [DDD.txt] в [DDD].


    ФС-1
+-->name    begin   size    other
|   [\]     0       1       DIR     ---+
|   AAA.txt 1       1       DEL     ---|-+
|   BBB.txt 2       2       3,DEL   ---|-|-+
|   CCC.txt 4       2       5,FREE  ---|-|-|-+
|   DDD     2       1       DIR     ---|-|-|-|-+
|                                      | | | | |
|                +---------------------|-|-|-|-|-------------------------------+
|        +-------|---------------------|-|-|-|-+                               |
|        |   +-+-|---------------------|-|-|-+---------------------------------|-+
|        | +-|-|-|---------------------|-|-+                                   | |
|      +-|-|-|-|-|---------------------|-+                                     | |
|    +-|-|-|-|-|-|---------------------+                                       | |
|    | | | | | | |                                                             | |
|    V V V V V V V                                                             | |
|    0 1 2 3 4 5 6 7 ...                                                       | |
|   -----------------------------------------------------------------------    | |
|   |T|A|D|B|C|C|A| | | | | | | | | | | | | | | | | | | | | | | | | | | | |    | |
|   -----------------------------------------------------------------------    | |
|    |   |                                                                     | |
+----+   |                                                                     | |
         |                                                                     | |
+--------+                                                                     | |
|                                                                              | |
+-->name    begin   size    other                                              | |
    AAA.txt 6       1       -       -------------------------------------------+ |
    CCC.txt 4       2       5.DEL   ---------------------------------------------+


    ФС-1. [\] Таблица       начинается с [0] блока и занимает 1 блок [T].
    ФС-1. [AAA.txt] Файл    начинается с [1] блока и занимает 1 блок [A], отметка DEL. Без изменений.
    ФС-1. [BBB.txt] Файл    начинается с [2] блока и занимает 2 блок [B], отметка второй блок [3], DEL. Без изменений.
    ФС-1. [CCC.txt] Файл    начинается с [4] блока и занимает 2 блок [C], отметка второй блок [5], FREE. Без изменений.
    ФС-1. [DDD] Таблица     начинается с [2] блока и занимает 1 блок [D], отметка DIR.
    ФС-1. [AAA.txt] Файл    начинается с [6] блока и занимает 1 блок [A]. Без изменений.
    ФС-1. [CCC.txt] Файл    начинается с [4] блока и занимает 2 блок [C], отметка второй блок [5], DEL. Без изменений.
    ФС-1. [4],[5] и начиная с [7] блока все пространство ВЗУ свободно.
    Название записи [DDD.txt] в [\] Таблице изменилось на [DDD] и тем самым скроем, что шаблонными названиями мешали сосредоточиться при обучении.

1.4.4.13. BAD.

    Переводится плохой или битый сектор (бэды). Бэды появляются в следствии износа ВЗУ, участок хранения данных начинает работать нестабильно (вспоминаем закрученные кассеты и бобины), чтение/запись происходит с ошибкой, а то и вовсе операция не возможна (бывало, что исправная ручка отказывается писать на бумаге?) Со временем обычно их количество только растет, в таком случае говорят ВЗУ сыпится (у меня год как начал осыпаться). Не то чтобы такие ВЗУ невозможно использовать, скорей возрастает ненадежность и снижается гарантированность. Вспомните если надо записать один байт данных используется весь сектор, а если хоть один бит не записывается или не считывается? На уровне ВЗУ сектор однозначно помечается как BAD. Если ВЗУ обладает интеллектом и неким запасом секторов, на лету производит подмену на сектор из запаса, и вроде бы как бы ничего и не произошло (видно через smart). Если ВЗУ не дано ни того, ни уже другого, сектор начинает светится явно как BAD, а Файловая система отмечает Блок использующий BAD сектор как BAD Блок и не использует в дальнейшем.
    Рассмотрим внимательно копирование файла [CCC.txt] в [EEE.txt] в ФС-2.

    Считываем файл [CCC.txt] в ОЗУ.

    ФС-2
+-->name    begin   size    other
|   [\]     0       1       DIR     ---+
|   CCC.txt 1       2       2       ---|-+
|                                      | |
|      +-+-----------------------------|-+
|    +-|-|-----------------------------+
|    | | |
|    V V V
|    0 1 2 3 ...
|   -----------------------------------------------------------------------
|   |T|C|C| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | == read ==> [ RAM ]
|   -----------------------------------------------------------------------
|    |
+----+


    ФС-2. [\] Таблица       начинается с [0] блока и занимает 1 блок [T]. Без изменений.
    ФС-2. [CCC.txt] Файл    начинается с [1] блока и занимает 2 блок [C], отметка второй блок [2]. Без изменений.
    ФС-2. Начиная с [3] блока все пространство ВЗУ свободно. Без изменений.

    Записываем считанный блок из ОЗУ в файл [EEE.txt].


    ФС-2
+-->name    begin   size    other
|   [\]     0       1       DIR     ---+
|   CCC.txt 1       2       2       ---|-+
|   EEE.txt 3       2       4       ---|-|-+
|                                      | | |
|          +-+-------------------------|-|-+
|      +-+-|-|-------------------------|-+
|    +-|-|-|-|-------------------------+
|    | | | | X
|    V V V V V
|    0 1 2 3 4 5 ...
|   -----------------------------------------------------------------------
|   |T|C|C|E|e| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | | <== write == [ RAM ]
|   -----------------------------------------------------------------------
|    |
+----+


    ФС-2. [\] Таблица       начинается с [0] блока и занимает 1 блок [T].
    ФС-2. [CCC.txt] Файл    начинается с [1] блока и занимает 2 блок [C], отметка второй блок [2]. Без изменений.
    ФС-2. [EEE.txt] Файл    начинается с [3] блока и занимает 2 блок [E], отметка второй блок [4].
    ФС-2. Начиная с [5] блока все пространство ВЗУ свободно.
    При записи в [4] блок возникает ошибка, часть данных записана остальная не пишется.

    Записываем считанный блок из ОЗУ в файл [EEE.txt] ПОВТОРНО.


    ФС-2
+-->name    begin   size    other
|   [\]     0       1       DIR     ---+
|   CCC.txt 1       2       2       ---|-+
|   EEE.txt 3       2       5       ---|-|-+
|                                      | | |
|          +---+-----------------------|-|-+
|      +-+-|---|-----------------------|-+
|    +-|-|-|---|-----------------------+
|    | | | |   |
|    V V V V   V
|    0 1 2 3 4 5 6 ...
|   -----------------------------------------------------------------------
|   |T|C|C|E|!|E| | | | | | | | | | | | | | | | | | | | | | | | | | | | | | <== write == [ RAM ]
|   -----------------------------------------------------------------------
|    |
+----+


    ФС-2. [\] Таблица       начинается с [0] блока и занимает 1 блок [T].
    ФС-2. [CCC.txt] Файл    начинается с [1] блока и занимает 2 блок [C], отметка второй блок [2]. Без изменений.
    ФС-2. [EEE.txt] Файл    начинается с [3] блока и занимает 2 блок [E], отметка второй блок [5].
    ФС-2. Начиная с [6] блока все пространство ВЗУ свободно.
    Проблемный [4] блок помечается как [!] BAD (обычно отображается как символ B). Вместо [4] блока используется свободный [5] блок. Создается новая запись [EEE.txt] в [\] Таблице.
    Обратите внимание, что часть данных была записана в [e] блок, данный [e] блок не подвергался перезаписи, а был только отмечен как [!] и отсранен от дальнейших попыток внесения изменений.
    BAD секторы не пригодны для повседневного использования, но это вовсе не значит, что их содержимое нельзя считать/перезаписать. С каждой попыткой вероятность считывания возрастает. Есть специальные программы, которые пытаются не только считать BAD сектора, но и могут восстановить их для повседневного использования.
    BAD сектора продолжают содержать данные, они просто плохо считываются и не иcпользуются при СТАНДАРТНЫХ методах доступа.

1.4.4.14. Дополнительные атрибуты.

    Чтобы не отвлекаться в качестве примера мы рассматривали упрощенную файловую систему, но надо сказать в разных файловых системах много разных малозаметных атрибутов/отметок. Например на некоторых мы можем видеть атрибут [Время/Дата Изменения Файла] - это конечно же очень удобно. А в некторых можно обнаружить ctime, mtime, atime соотвественно Создание, Изменение, Доступ - это еще удобней. Не стоит марать руки, а надо накидать небольшую программку и вы всегда сможете сформировать отчет когда и во сколько смотрели фильмы, слушали музыку, редактировали текстовой файл, разглядывали очень заманчивые картинки и зачем-то ковырялись вон в том подозрительном файле, а самое главное благодаря точности в полученном отчете вам всегда помогут лучше спланировать свое дальнейшее времяпрепровождение.
    Сразу отмечу, здесь речь идет не о метаданных (metadata). Метаданные - это информация, хранящаяся в файле и предоставляющая сведения о свойствах самого файла. Метаданные файла могут содержать личную информацию, скрытые сведения, свойства сервисов, координаты местоположения, сведения об изменениях файла, другие данные и подробности об устройстве создавшем файл. Данные о данных. Это уровень выше. (отдельная тема)

1.4.4.15. Journal.

    Нельзя не упомянуть.
    Файловые системы бывают Не Журналируемые (fat, ext2) и Журналируемые (ntfs, ext3). Обратите внимание, выше при рассмотрении, после каждого рисунка писалось [ФС-1.] и [ФС-2.]. Сведите эти записи в единый список и получите тот самый журнал произведенных действий (точнее каждую запись нужно преумножить т.к. она включает еще более детальные операции). Конечно же это все направлено ради стабильности ( ;))) ), журналирование позволяет организовать транзакции. А теперь на пальцах для тех кто вместе со мной боится страшных слов. Мы уже должны понимать не то что Запись файла, но даже запись одного блока может состоять из нескольких записей секторов. Представьте, что во время Записи произошло резкое отключение компьютера. Были сделаны записи в Таблице, определены Блоки, но Данные записаны были не полностью. Если, после включения компьютера, запись в Таблице посчитать корректной, сами того не осознавая (пока) теряем данные, если посчитать некорректной велика вероятность, что данные все-таки были успешно записаны (многие ВЗУ умеют при пропадании питания доделывать работу до конца). Если имеется Журнал он поможет найти нужный ответ.
    Для журнала выделяется специально отведенное служебное место. Надо понимать для журналирования используются ресурсы компьютера.
    Журналирование повышает стабильность и сокращает потерю данных, ведет историю файлов и при необходимости может напомнить если вы что-то вдруг забудете на чем вас прервали.

1.4.4.16. CoW.

    Корова здесь не причем. Расскладывается на Copy-on-Write - Копирование на Записи. Это метод Сохранения уже существующего файла применяющийся как в некоторых файловых системах (zfs), так и реализуемый программно. Представьте, что вы Считали файл для редактирования, внесли изменения, и дали команду Сохранить. Данные должны записаться в тот же самый Блок состоящий из нескольких секторов, и во время записи происходит отключение компьютера. Часть Блока успела записаться, а часть нет. При включении компьютера обнаруживается самое веселое, старое содержимое было частично перезаписано новым, но и новое полностью не записалось.
    Даннный метод позволяет вам избежать подобной проблемы. При сохранении создается новый файл с новыми данными, и только после этого удаляется старый файл со старыми данными, после чего новый файл переименовывается в старый (пусть лучше так отложится). И так при каждом сохранении изменений.
    Данный метод отлично позволяет автоматизировать создание скрытых резервных копий предыдущих Данных.

1.4.4.17. Ограничение количества перезаписей. TRIM.

    Практически все ВЗУ имеют Ограничение количества перезаписей. Бывалые ВЗУ позволяют использовать свои сектора до BAD. Современные (SSD) берут это дело под свой зоркий контроль и внимательно отсчитывают каждый цикл записи за каждым сектором. И проявляется это уже как метод CoW на уровне ВЗУ, не зависимо от используемой Файловой системы и принудительного отключения CoW выше.
    Гарантированное Ограничение количества перезаписей - гарантированное возникновение BAD.
    У меня лично был случай когда ВЗУ (флеш), после внезапного отключения компьютера, перешло в режим только для чтения и не давало вносить изменений. Никакие методики так и не позволили сбросить установившийся флажок.
    Теперь в заботе о новых технологиях. Цитата - "TRIM - не позволяет вашему SSD делать ненужные записи." ист.МДК-2018-283. Гарантируется максимальное восстановление Данных.

1.4.5. TEMP.

    TEMP, TMP, tmp, temp и пр. - временные файлы. Следуя из названия приходит понимание. Файлы создаются на время после чего удаляются. Создаются эти файлы программами, для своих личных, корыстных целей, незаметно, скрытно, затем так же удаляются. Некоторые программы создают их в специально отведенных директориях, некоторые где им захочется. В случае внезапного отключения компьютера судьба этих файлов вместе со всем содержимым обычно никого не интересует.
    Временные файлы великолепно поджирают пространство ВЗУ, а если вам будет интересно, в познавательных целях, их содержимое всегда можно восстановить.

1.4.6. Виртуальная память.

    Посмотрел на подготовленные рисунки и вспомнил дни своего студенчества, когда преподаватель пытался на доске нарисовать и объяснить, что такое Виртуальная память. Не то чтобы он рисовал не так, но его откровенный взгляд говорил, что он и сам не понимает о чем порой говорит хотя внимательно подглядывает в книжку на своем столе. Все это дало команду отключить мозг и сделать вид, что внимательно слушаю. И тогда это было правильное решение, потому что первый компьютер, который мог (ключевое слово) использовать Виртуальную память встретился лет через пять. Для полного освоения предмета всегда люблю пощупать.
    Виртуальная память - это способ обмануть программы, что ОЗУ в компьютере достаточно (кому реально интересно рекомендую зайти на сайт intel и скачать мануал по процессорам там не более 5000 страниц - наслаждайтесь чтением, сам прочитал). На компьютере выполняется много программ: вывод на экран, ввода с клавиатуры, ввод с мышки, вывод звука, незаметный захват звука с микрофона и камеры (зачем ресурсам простаивать), обслуживание ВЗУ, теже часики нарисовать сбоку и т.п. И каждой программе требуется память не только для собственного кода, но и для собственных данных. Какие-то пытаются решить проблему временными файлами, но это сильно тормозит. Другие просят ОЗУ память у Операционной системы (далее ОС) и она дает столько сколько надо и все довольны.
    Откуда ОС находит столько ОЗУ на всех. За счет пространства ВЗУ. ОС создает такой большой временный файл или использует специально выделенное место на ВЗУ. Называют по разному: pagefile, swap, файл подкачки. По своей структуре напоминает Файловую систему. ОС внимательно следит за ОЗУ, и те участки ОЗУ, которые на данный момент не используются Записывает в SWAP, а освободившееся место отдает нуждающимся. В случае если Записанный участок востребован ОС Считывает его из SWAP в высвобожденный участок ОЗУ. Вот такая карусель получается между ОЗУ и ВЗУ. Как реализована данная карусель зависит полностью от разработчиков. Представьте, что у вас в руках несколько листов для записей, но на всех их не хватает и вы вынуждены отдавать высвобожденные листы (как можно быстрее) всем желающим ;) .
    Не многие разработчики программ вникают в такие моменты и продолжают беспечно доверять данные ОЗУ. На самом деле можно попытаться уведомить, что данный участок ОЗУ надо оградить от бесчинств Виртуальной памяти, а жизненный цикл хранения критичных данных ограничить до минимума.
    Виртуальная память отражает содержимое ОЗУ работающих программ и хранится на ВЗУ. В случае внезапного отключения компьютера содержимое SWAP постигает участь обыкновенного Файла.

1.4.7. Hibernate.

    Гибернация - процесс заморозки состояния системы (фильм "Новые амазонки" про гибернацию). Очень замечательный режим, экономит питание и ресурсы компьютера (механика, электроника и т.п.). Позволяет одним нажатием кнопки как бы выключить компьютер, а затем одним нажатием как бы включить и тут же приступить к продолжению отложенного процесса.
    Во время использования ОЗУ ПОЛНОСТЬЮ (без исключений) записывается на ВЗУ, сохраняя текущее состояние.

1.4.8. Восстановление.

    Давайте критически посмотрим на наши ФС-1 и ФС-2 и попытаемся восстановить утерянные данные.


    ФС-1
+-->name    begin   size    other
|   [\]     0       1       DIR     ---+
|   AAA.txt 1       1       DEL     ---|-+
|   BBB.txt 2       2       3,DEL   ---|-|-+
|   CCC.txt 4       2       5,FREE  ---|-|-|-+
|   DDD     2       1       DIR     ---|-|-|-|-+
|                                      | | | | |
|                +---------------------|-|-|-|-|-------------------------------+
|        +-------|---------------------|-|-|-|-+                               |
|        |   +-+-|---------------------|-|-|-+---------------------------------|-+
|        | +-|-|-|---------------------|-|-+                                   | |
|      +-|-|-|-|-|---------------------|-+                                     | |
|    +-|-|-|-|-|-|---------------------+                                       | |
|    | | | | | | |                                                             | |
|    V V V V V V V                                                             | |
|    0 1 2 3 4 5 6 7 ...                                                       | |
|   -----------------------------------------------------------------------    | |
|   |T|A|D|B|C|C|A| | | | | | | | | | | | | | | | | | | | | | | | | | | | |    | |
|   -----------------------------------------------------------------------    | |
|    |   |                                                                     | |
+----+   |                                                                     | |
         |                                                                     | |
+--------+                                                                     | |
|                                                                              | |
+-->name    begin   size    other                                              | |
    AAA.txt 6       1       -       -------------------------------------------+ |
    CCC.txt 4       2       5.DEL   ---------------------------------------------+


    Файл [AAA.txt] в [\] Таблице может быть восстановлен [1] блок 100% (в журнале нет упоминаний о его перезаписи) стандартными инструментами содержащие в названии [undelete].
    Файл [BBB.txt] в [\] Таблице может быть восстановлен [3] блок 100% (в журнале нет упоминаний о его перезаписи), и [2] блок методом Listen (ХЗ как правильно называется, но легко понять тому кто когда-то пользовался магнитофоном и сталкивался сквозь новую запись прослушивается старая, а то и не одна) (зависит от типа ВЗУ) возможно с применением специального стенда.
    Файл [CCC.txt] в [\] Таблице может быть восстановлен [4] и [5] блоки 100% (в журнале нет упоминаний о его перезаписи) стандартными инструментами содержащие в названии [undelete].
    Файл [DDD] (согласно журналу) раньше имел название [DDD.txt]. Восстанволение не требуется.
    Файл [AAA.txt] в [DDD] Таблице. Восстановление не требуется.
    Файл [CCC.txt] в [DDD] Таблице может быть восстановлен [4] и [5] блоки 100% (в журнале нет упоминаний о его перезаписи) стандартными инструментами содержащие в названии [undelete].
    Дополнительно все пространство ВЗУ (включая неиспользованное и служебное) прогнать инструментом (имя им "легион" включая целые дистрибутивы) на предмет, а мало ли что было до нас и без нас.
    Дополнительно все пространство ВЗУ (включая неиспользованное и служебное) прогнать методом Listen (зависит от типа ВЗУ) возможно с использованием стенда, слушающий да услышит.


    ФС-2
+-->name    begin   size    other
|   [\]     0       1       DIR     ---+
|   CCC.txt 1       2       2       ---|-+
|   EEE.txt 3       2       5       ---|-|-+
|                                      | | |
|          +---+-----------------------|-|-+
|      +-+-|---|-----------------------|-+
|    +-|-|-|---|-----------------------+
|    | | | |   |
|    V V V V   V
|    0 1 2 3 4 5 6 ...
|   -----------------------------------------------------------------------
|   |T|C|C|E|!|E| | | | | | | | | | | | | | | | | | | | | | | | | | | | | |
|   -----------------------------------------------------------------------
|    |
+----+


    Файл [CCC.txt] в [\] Таблице. Восстановление не требуется.
    Файл [EEE.txt] в [\] Таблице. Восстановление не требуется.
    [4] блок отмечен как BAD может быть восстановлен как минимум частично.
    Дополнительно все пространство ВЗУ (включая неиспользованное и служебное) прогнать инструментом (имя им "легион" включая целые дистрибутивы) на предмет, а мало ли что было до нас и без нас.
    Дополнительно все пространство ВЗУ (включая неиспользованное и служебное) прогнать методом Listen (зависит от типа ВЗУ) возможно с использованием стенда, слушающий да услышит.
    Есть инструменты, которые не смотрят на тип файловой системы, на назания файлов, они методично просматривают сектор за сектором ВЗУ на содержимость и восстанавливают, кусочек текста, кусочек картинки, кусочек звука, кусочек видео и т.д.
    Как видим если мы обладаем достаточным инструментом данные можно восстановить теоретически ВСЕГДА и личный опыт это многократно подтверждает (ключевое слово было теоретически).

    В 2018 году во время 6 часового допроса о моем избиении гэтовцами, следок спросил, какой смысл все записывать на диктофон? В моей жизни был реальный случай, это 2012 год, когда мне на сотовый телефон позвонил "мусор" и сказал, что на меня поступило очередное заявление. При встрече он тут же хотел на меня надеть наручники и отвезти за решетку. Но после того как мне удалось восстановить на диктофоне запись из серии " а как же оно было на самом деле" и дать послушать, опешил и спросил не желаю ли написать встречное заявление. Те кто написал ЛОЖНЫЙ ДОНОС на меня до сих пор безнаказано разгуливают на свободе и продолжают пытаться обливать грязью. Но умение восстаналивать данные уберегло от последствий очередного ложного доноса организованной группы лиц. Пригодиться ли это умение вам - решайте сами.

1.4.9. Чистота залог здоровья.

    Чтобы понять что такое чистота, нам пришлось окунуться в грязь, те кто не был в грязи не сможет сейчас увидеть разницы, и потому будучи грязным считает чистым.
    Предлагаю взглянуть на вышеописанный материал на уровне пользователя. Давайте возьмем редактор, поскромней, попроще [vi]. И через командную строку укажем название создаваемого файла [/tmp/1].


.!.:.!. vi /tmp/1


    В открывшемся редакторе перейдем в режим редактирования нажав [a] или [i]. Теперь наберем текст [0123456789]. Выйдем из режима редактирования нажав [ESC] и снова окажемся в режиме команд. Дадим команду Сохранить и Выйти из редактора набрав [:wq]. Подтвердим команду нажав [ENTER].
    Убедимся в наличии созданного файла на ВЗУ командой [ls -l /tmp].


.!.:.!. ls -l /tmp
total .!.
-rw-r--r-- 1 .!. .!. 11 Jan  1 12:00 1


    Размер файла указан 11 байт. Взглянем на содержимое командой [cat /tmp/1].


.!.:.!. cat /tmp/1
0123456789


    Странно отображается 10 символов как и вводили, а с размером не совпадает. Сменим инструмент и посмотрим содержимое командой [xxd -g 1 /tmp/1].


.!.:.!. xxd -g 1 /tmp/1
00000000: 30 31 32 33 34 35 36 37 38 39 0a                 0123456789.


    Понятно, дополнительный спецсимвол [0ah]. Предлагаю сменить редактор и взять из стандартного набора [coreutils] например [shred]. Запустим редактор командой [shred -v /tmp/1]. Параметр [-v] для информативности.


.!.:.!. shred -v /tmp/1
shred: /tmp/1: pass 1/3 (random)...
shred: /tmp/1: pass 2/3 (random)...
shred: /tmp/1: pass 3/3 (random)...


    Хотя редактор не показал привычного окна редактирования, но проинформировал, что три раза произвел редактирование содержимого файла [/tmp/1].
    Проверим изменения файла командой [ls -l /tmp].


.!.:.!. ls -l /tmp
total .!.
-rw-r--r-- 1 .!. .!. 4096 Jan  1 12:00 1


    Размер файла изменился с 11 до 4096 байт, что равняется размерности Блока Файловой системы.
    Посмотрим содержимое файла проверенным инструментом через команду [xxd -g 1 /tmp/1].


.!.:.!. xxd -g 1 /tmp/1
00000000: f9 6b 0d c4 6d 96 9d 69 4e 98 53 49 0a 2a d1 62  .k..m..iN.SI.*.b
00000010: 5f 36 60 3a 5c c1 5a db cc ed ef 8f c1 af 0a 8f  _6`:\.Z.........
00000020: 38 3d 8b c4 bf 1d 7f 84 94 f2 ba 5d a4 42 14 85  8=.........].B..
00000030: a0 88 79 db f8 c5 30 bd d0 c9 9d 28 1d 24 c7 96  ..y...0....(.$..
00000040: ef 9b 19 9b 6c a4 65 48 af 08 f0 03 a8 cd 7b 67  ....l.eH......{g
00000050: 2a 60 7f 69 04 39 1e 64 05 95 bb 82 23 97 72 fa  *`.i.9.d....#.r.
00000060: 0f 64 1e a1 21 2d e0 bd f0 41 87 16 d7 98 a7 c4  .d..!-...A......
00000070: 5d e9 e5 8c 46 5e 59 08 ac f6 9c 2f 6d b2 70 cb  ]...F^Y..../m.p.
00000080: 2c d1 7b fd b0 78 e4 f7 bd e4 46 09 ab aa 01 54  ,.{..x....F....T
00000090: 85 c8 e2 a1 73 76 a2 f2 e7 e9 55 98 2f 7f 87 5f  ....sv....U./.._
000000a0: 27 74 8b 3e 3b 8a 43 90 f6 52 a4 04 76 a7 2d 82  't.>;.C..R..v.-.
000000b0: 77 46 a8 89 91 a9 ec 62 ae 0e 24 5d 9f 3c e5 33  wF.....b..$].<.3
000000c0: 76 01 49 18 1d 34 d2 27 40 7f a8 bf 16 d7 73 24  v.I..4.'@.....s$
000000d0: 10 32 0d 6a 94 fc 48 d3 eb 02 7f 17 42 4b 81 e2  .2.j..H.....BK..
000000e0: 5c 68 70 99 da ab 2a 13 2b 03 22 ba 33 49 6f 02  \hp...*.+.".3Io.
000000f0: cd e6 b5 a8 84 65 9f e4 c4 95 6d 47 d0 6d 47 17  .....e....mG.mG.
00000100: a9 25 c0 49 49 1e ce 4e 4c 9f e1 55 88 08 3b 2c  .%.II..NL..U..;,
00000110: 19 be c9 1f 29 cf 40 47 15 4f a1 4d c9 bd 02 4b  ....).@G.O.M...K
00000120: e9 d1 32 65 d0 6b 31 4c e1 e2 f8 70 7b 88 4e 55  ..2e.k1L...p{.NU
00000130: b6 6d 37 b9 2d fa 41 73 c5 24 e2 f6 ab 8f 2e cd  .m7.-.As.$......
00000140: 96 15 c5 a1 d4 c4 bb b5 39 3e 4d 53 e6 2a 2d e2  ........9>MS.*-.
00000150: 57 57 a9 d7 68 2b b9 34 6c fd ae 12 1b 27 63 e6  WW..h+.4l....'c.
00000160: d9 05 31 f1 c9 63 99 ff 14 63 43 a9 aa c6 df 72  ..1..c...cC....r
00000170: 7b 46 37 93 cd 7b 2e 51 fc d6 31 d3 1a 4f 28 f8  {F7..{.Q..1..O(.
00000180: 14 ee 79 ca 40 6a 3d 7f 03 8c 65 4e d4 2c 25 a8  ..y.@j=...eN.,%.
00000190: e5 3b bd 75 6e a0 4f f7 95 5e 76 ff 81 1d 45 49  .;.un.O..^v...EI
000001a0: 9a 17 12 e2 f7 07 a5 e2 e3 18 f3 30 69 d5 88 8b  ...........0i...
000001b0: fc cf a0 10 1c c9 17 cd 87 f9 fc 6e 53 44 46 44  ...........nSDFD
000001c0: 27 8c 25 41 c1 1e 43 c6 5a 8e f2 42 2a fc 11 0c  '.%A..C.Z..B*...
000001d0: 82 51 48 7e 41 99 ec bc 81 32 df 38 1f 32 5d 2d  .QH~A....2.8.2]-
000001e0: fc 21 e7 6f 50 b9 ef 9d 28 a7 12 41 6f 4d 34 82  .!.oP...(..AoM4.
000001f0: e7 98 0f 84 4b 3d 3b 9e c8 cb 29 71 14 d1 de bf  ....K=;...)q....
00000200: 6d fd b6 f6 9d 3b 76 7f 59 5d 6a 45 16 a4 3a 05  m....;v.Y]jE..:.
00000210: 68 d8 0e 3a 56 a5 84 9d cb 42 79 1f 8e c7 0d 8a  h..:V....By.....
00000220: f4 ed b9 98 cc 12 92 10 ca 13 31 61 db f2 c0 72  ..........1a...r
00000230: 76 05 d9 eb 28 fe ad 84 83 85 61 e5 02 71 ab a6  v...(.....a..q..
00000240: 64 0a 13 fd df 72 65 17 62 86 16 72 b9 9e cf 2e  d....re.b..r....
00000250: b7 9e ea 27 2f 9e 19 b8 e4 80 6a c0 27 a9 39 0c  ...'/.....j.'.9.
00000260: 6c ef d5 a5 49 68 60 f6 cb 38 11 bb 6e 84 18 6a  l...Ih`..8..n..j
00000270: 59 84 af be 6b b2 dd d3 42 27 35 0e a6 0f 2a 4b  Y...k...B'5...*K
00000280: bd 5a 2a ab b9 7d 82 71 2a c2 de a9 dd c0 70 67  .Z*..}.q*.....pg
00000290: 2d 4b e5 f7 f8 fd d0 93 79 53 ba 87 f1 62 d6 48  -K......yS...b.H
000002a0: bb 22 f2 79 d6 59 64 ae 34 60 80 a1 b5 fa 4a 0d  .".y.Yd.4`....J.
000002b0: fb f8 c6 3b 38 c1 fb 83 4f 16 59 db a8 c8 f6 3f  ...;8...O.Y....?
000002c0: 71 af 8b 11 bc 33 de 0d ee 72 85 77 7a d6 c5 04  q....3...r.wz...
000002d0: d9 b9 25 e2 83 a5 f7 43 94 c0 9d 6f bd b1 ef dd  ..%....C...o....
000002e0: a2 5a 59 4d 56 ed 3b f5 9c f3 2c d7 b5 97 c2 f8  .ZYMV.;...,.....
000002f0: a9 34 83 b6 43 14 2e 3a 1e 60 df 60 5a 1f f5 0f  .4..C..:.`.`Z...
00000300: 86 2c 41 22 ba 5d 50 12 e1 42 2a 00 bb 1f 7b c8  .,A".]P..B*...{.
00000310: 63 e7 e0 fa f6 4a 99 1d d8 f8 4e 86 8c b7 62 d8  c....J....N...b.
00000320: 2f b1 c0 44 46 97 b7 3b 4c d8 8a 4e c5 06 59 cf  /..DF..;L..N..Y.
00000330: ed c4 0d 0c b1 02 32 62 3e 93 09 e0 f3 44 04 63  ......2b>....D.c
00000340: 11 c3 f1 24 8a 04 52 1b 5d 3e b8 da 1a 5a 4b 5f  ...$..R.]>...ZK_
00000350: 46 63 40 9f 0d 4f a3 48 9b b5 c3 da 29 01 47 7b  Fc@..O.H....).G{
00000360: dc f7 0a 4a d6 5d a3 8f 7a ac d3 6d 75 43 26 0c  ...J.]..z..muC&.
00000370: 61 a3 31 e0 e9 d6 65 11 28 27 ff 29 b2 12 e5 83  a.1...e.('.)....
00000380: e9 cc 02 2c a0 47 ab 18 08 23 7f e4 6f 2c 4d b1  ...,.G...#..o,M.
00000390: b3 8e 1b d6 3f b0 a6 0d f8 23 1d be cf fc 2b 4b  ....?....#....+K
000003a0: 95 de 73 61 2c 34 48 4b 9f 70 b0 54 6b 0c a6 53  ..sa,4HK.p.Tk..S
000003b0: ea e7 dd 46 3a 7c 37 43 78 ab af f8 d6 3b 9a 1e  ...F:|7Cx....;..
000003c0: 94 ae 02 08 8a 36 dd 6a 12 be 2c 4a d1 06 e6 bf  .....6.j..,J....
000003d0: 28 c9 3b 23 00 e9 de 89 7e 47 6b 10 4b 33 88 cb  (.;#....~Gk.K3..
000003e0: ea ce 76 f4 5e b0 43 3a b1 b4 7a 9d 2f 54 f1 0e  ..v.^.C:..z./T..
000003f0: e5 02 5e 7b 3d fd f8 ab cb 68 96 ba 50 07 91 aa  ..^{=....h..P...
00000400: ea 84 97 d2 a3 fb 2a ac 5e 21 60 5f 4d a3 ca 07  ......*.^!`_M...
00000410: e1 7c c8 81 58 fe 95 b9 3e fc 74 0d 25 b3 aa d8  .|..X...>.t.%...
00000420: c6 ab 67 45 ff 38 e1 96 6b 1b 77 9a 1a 97 78 6c  ..gE.8..k.w...xl
00000430: bc b2 9d b5 e7 ed 00 bd fd 13 53 f4 25 5e 01 d6  ..........S.%^..
00000440: 26 c9 f2 47 71 f9 22 5f d5 a9 00 d3 20 3b cc 50  &..Gq."_.... ;.P
00000450: 7c 96 a0 70 64 cb c0 48 52 e5 22 66 4f 73 6f 24  |..pd..HR."fOso$
00000460: 07 ed b4 c4 a3 ab 82 e2 72 e0 e7 30 e7 35 1a b9  ........r..0.5..
00000470: b1 8d 0b 9e bc eb 58 b0 55 a4 82 76 57 9a 19 38  ......X.U..vW..8
00000480: 80 1c 5e 84 82 de d5 c1 b4 b9 42 36 79 aa 20 3e  ..^.......B6y. >
00000490: bb cb 15 81 fc e7 88 fd 69 57 69 65 61 15 6b b1  ........iWiea.k.
000004a0: 9a 49 12 ff 94 b7 e0 6e 76 34 2b cf 42 01 4c 69  .I.....nv4+.B.Li
000004b0: 82 e2 b0 0b f2 a4 90 b4 96 c8 b1 93 9a 9a 51 1d  ..............Q.
000004c0: a7 ac a2 ce 66 94 fd ca 89 7a 00 bf 6a 59 81 a8  ....f....z..jY..
000004d0: 0b 8e f2 bc 06 fa d3 09 34 d8 45 57 00 83 5d e5  ........4.EW..].
000004e0: 23 58 d9 9d 09 e6 c6 52 1e a3 94 4f db 1c 48 82  #X.....R...O..H.
000004f0: bc a3 08 d1 f8 c6 8f 6a eb f2 57 52 f7 ad 43 fd  .......j..WR..C.
00000500: fd c6 e6 ac e9 cf 92 f2 09 c6 ff b6 33 5f 59 5c  ............3_Y\
00000510: 61 20 7b f1 d7 b2 48 e1 bc b0 26 bd ae 18 ad e0  a {...H...&.....
00000520: ff 06 9c eb 23 cc 82 31 e1 09 6c 9d 2d a8 7c 53  ....#..1..l.-.|S
00000530: d4 a4 4b 76 92 bc a4 f4 74 d3 ce b3 bf bf c1 95  ..Kv....t.......
00000540: bf e0 d8 54 a0 e2 a5 ff c8 47 7b 87 04 15 21 e8  ...T.....G{...!.
00000550: a7 e1 7c cb 4f b4 82 cd c2 7e d3 90 99 50 74 31  ..|.O....~...Pt1
00000560: 24 47 52 3d e8 2a 85 66 ae 34 18 dd 43 68 76 c4  $GR=.*.f.4..Chv.
00000570: 91 13 60 e7 e8 51 5d 49 b0 2d 3e ff 46 bc 32 c6  ..`..Q]I.->.F.2.
00000580: a2 bc cb a4 a8 c5 07 83 56 67 34 58 dd 3c 3f 89  ........Vg4X.<?.
00000590: 64 37 4e c5 7a c2 cc 03 b0 2a be bd 64 76 79 65  d7N.z....*..dvye
000005a0: d5 c5 c9 7c e1 47 d7 35 22 bb ef 98 cb bc d8 b7  ...|.G.5".......
000005b0: 49 ac c1 29 69 7c 3d b8 f1 0f c3 db b3 0a 1f 70  I..)i|=........p
000005c0: 09 26 7f 12 0d 13 a1 f4 6c 93 8b ed 43 c6 d3 a0  .&......l...C...
000005d0: f1 eb cf 7e f5 60 53 b2 39 73 03 77 e6 66 10 e3  ...~.`S.9s.w.f..
000005e0: 0e 24 c4 4b 86 9b 3d 5e 8c fe 5f 69 71 a2 31 0d  .$.K..=^.._iq.1.
000005f0: 29 4b 11 a8 e1 16 7a 41 cb 15 8c e9 72 7c 90 fd  )K....zA....r|..
00000600: b5 7e 1c d6 ec 12 4f 09 6b c6 9c c1 de e8 b6 87  .~....O.k.......
00000610: a2 bd 1b a7 21 33 1e e4 d1 a3 49 88 72 4c df 0d  ....!3....I.rL..
00000620: 3e 2b 38 1b 29 2f 78 90 4f 94 fc b1 ed c0 63 19  >+8.)/x.O.....c.
00000630: 76 ba 64 33 ac 43 f2 65 86 f5 b4 07 30 7b 1d cc  v.d3.C.e....0{..
00000640: 58 a2 e2 e3 20 55 c7 5d 5d 5f 4b cd ce 61 b3 f3  X... U.]]_K..a..
00000650: 83 f3 74 fb 29 aa ff cc d1 ab ed d0 a5 50 45 9f  ..t.)........PE.
00000660: c3 ca 8e ea 6d bd d0 8a ab 95 6e 0a d9 b0 7e b6  ....m.....n...~.
00000670: b9 3c 7b 80 b2 a4 8d 7c 23 20 70 99 31 49 2a 92  .<{....|# p.1I*.
00000680: d1 dd 8e 39 7d 45 dd 7b 18 5b e8 d1 aa 09 97 39  ...9}E.{.[.....9
00000690: dd 59 d9 60 11 25 d5 56 70 7b e5 da f6 7b 25 66  .Y.`.%.Vp{...{%f
000006a0: 44 94 c8 72 e5 5f 5c 58 75 2e a3 95 50 1b 37 4b  D..r._\Xu...P.7K
000006b0: c2 17 94 7a 97 07 e9 43 0c 2f c8 c1 10 c4 aa c0  ...z...C./......
000006c0: a5 4c dc d3 4d 2a 5d 06 59 04 56 04 79 82 f0 eb  .L..M*].Y.V.y...
000006d0: e7 79 97 23 08 ea 7d 12 8b 8f 6c a7 06 39 04 27  .y.#..}...l..9.'
000006e0: 09 24 b7 51 90 da bf 2d 72 b2 58 42 fa 99 6d 4b  .$.Q...-r.XB..mK
000006f0: ca b8 77 bd b0 c9 d4 11 35 db b3 07 11 36 5a ee  ..w.....5....6Z.
00000700: 1e d8 98 ae 89 db 1b 8c 90 63 e0 71 b2 cd 70 44  .........c.q..pD
00000710: f6 f0 10 e8 8f 83 b7 3c 62 fd 98 41 5d c7 f4 0d  .......<b..A]...
00000720: 0c a4 47 6a b7 70 91 68 83 86 c1 ac dd e5 3e db  ..Gj.p.h......>.
00000730: 2b 26 fa e0 2e da 83 d5 bf a5 f1 9b 38 71 9d 4e  +&..........8q.N
00000740: f1 29 5e be c7 76 23 99 5d ea 3c 2a 15 c9 78 dd  .)^..v#.].<*..x.
00000750: 40 95 fa 98 09 92 7b 18 4b e7 ef b7 80 24 2e 00  @.....{.K....$..
00000760: 71 c2 af 13 bd 4c aa 0b 58 b0 1e cc d0 82 6c 79  q....L..X.....ly
00000770: 00 b7 d0 8e fa f5 31 8d b6 76 7f 97 1f 9c 81 86  ......1..v......
00000780: 0c d3 21 85 af 88 6d b2 34 93 d2 85 56 20 8f 8c  ..!...m.4...V ..
00000790: f0 4d 86 87 ed 80 d4 20 55 f3 23 09 22 b7 78 62  .M..... U.#.".xb
000007a0: 2a ac 1d 55 7d f8 c5 f5 f6 80 3b 54 f3 fe bb 8c  *..U}.....;T....
000007b0: 11 9d 88 7c a7 f9 58 e0 4a b9 5e c8 69 c6 a6 d4  ...|..X.J.^.i...
000007c0: 65 77 95 34 fb cd 00 db 42 cd ab 37 f4 a3 7a 05  ew.4....B..7..z.
000007d0: 43 fe 9f 57 8f 9e 59 08 bb ae cf 39 da 96 c3 e7  C..W..Y....9....
000007e0: 77 b1 15 c9 3f 1f e8 b7 e5 e3 c8 83 ab 47 95 38  w...?........G.8
000007f0: cc cb 2c 9d 25 c9 d5 10 0f 0b fa e8 38 e6 e3 08  ..,.%.......8...
00000800: d8 58 f9 bc b9 c5 d4 23 90 12 e9 68 d7 71 00 f0  .X.....#...h.q..
00000810: 07 c3 b4 e8 98 6b d2 ea bc a3 40 49 c7 ce 86 a0  .....k....@I....
00000820: 7c 48 65 50 22 71 c0 d2 7c 67 02 1b a4 f9 32 ac  |HeP"q..|g....2.
00000830: 8e 7d b7 97 88 18 99 f1 d1 6d 09 d4 82 95 2c 82  .}.......m....,.
00000840: ba b0 84 64 02 99 e9 0a 6c 43 0b 0b 5a 08 1a 3e  ...d....lC..Z..>
00000850: ca 27 88 d2 7a 33 69 3a b2 09 7c 33 f7 21 7b 59  .'..z3i:..|3.!{Y
00000860: a7 f3 c4 7a c3 f9 54 b7 15 4a 8d f5 31 73 db 92  ...z..T..J..1s..
00000870: e4 6a be 89 2b c8 03 4f 59 59 3b ad cc 0a bb 6b  .j..+..OYY;....k
00000880: 7d 77 68 2a 6c 14 17 1e 0b 69 af 2b 54 62 88 bb  }wh*l....i.+Tb..
00000890: 49 70 0c e5 6f b6 ba 8f ae b5 52 ce 52 e4 9b 53  Ip..o.....R.R..S
000008a0: e2 e0 50 61 d5 a0 49 c0 85 72 96 75 33 f2 d9 46  ..Pa..I..r.u3..F
000008b0: da 1e 9a d1 65 04 30 b7 55 67 a2 18 fb cd 65 fc  ....e.0.Ug....e.
000008c0: b4 7a df 80 74 8a 00 51 66 22 f0 08 72 de 74 f3  .z..t..Qf"..r.t.
000008d0: 2d f9 d9 df 8f 25 a8 aa 85 d4 d9 0d 2a a6 7c 74  -....%......*.|t
000008e0: 3c ac be d2 d1 7c d1 e3 ca e5 df ce 72 b9 2d cf  <....|......r.-.
000008f0: 89 33 3f 83 2d ea 48 47 13 d6 83 b4 51 e6 25 3b  .3?.-.HG....Q.%;
00000900: a1 a0 13 5f b6 14 68 47 46 fc f1 58 1c 3a b9 be  ..._..hGF..X.:..
00000910: e4 96 ac e3 06 44 5f 33 bf 79 26 61 58 30 27 c6  .....D_3.y&aX0'.
00000920: 50 37 09 a9 33 48 ca ed 0a 0c ee 8b 3c 80 69 62  P7..3H......<.ib
00000930: dd 87 5d 5a 5a 49 18 54 c6 2c 86 df 2e 03 e8 af  ..]ZZI.T.,......
00000940: 10 60 86 78 8e e9 51 64 7b b1 3b f0 75 9b de 5e  .`.x..Qd{.;.u..^
00000950: 3a 0a a4 29 c3 57 22 3a d4 ba 52 a8 3b 90 56 0f  :..).W":..R.;.V.
00000960: df 95 c8 fe ff 0e cc df b5 f0 aa 71 72 67 db 0d  ...........qrg..
00000970: b8 ba c9 0d 33 62 f3 a2 61 14 15 c4 26 ea 97 d6  ....3b..a...&...
00000980: 2a 8c f1 c6 16 57 28 a4 b9 c3 8e 7c 68 3c ea 09  *....W(....|h<..
00000990: a3 02 44 62 00 47 2c b4 f6 4e 63 33 ab aa 38 54  ..Db.G,..Nc3..8T
000009a0: 9b f8 6d de 2a 80 ac 91 a8 a9 33 33 2b f4 5c 5c  ..m.*.....33+.\\
000009b0: eb a4 a4 04 91 1c 68 ce 99 85 b9 a1 04 30 15 e0  ......h......0..
000009c0: 54 c6 15 15 2a 72 74 65 b8 38 d1 ac 67 ee 73 72  T...*rte.8..g.sr
000009d0: 41 0c 63 f6 03 e2 bc 38 2a 4d 51 e1 6d c7 e7 87  A.c....8*MQ.m...
000009e0: 19 9f 44 34 d4 e3 a1 de 44 6c fa 6a 48 dd 3b d0  ..D4....Dl.jH.;.
000009f0: 9e 1d e0 10 11 16 59 d6 6a 3f 40 2d e0 19 9d fe  ......Y.j?@-....
00000a00: 7c e1 d8 92 6a 49 3e ff ba 68 d0 63 32 94 f3 1e  |...jI>..h.c2...
00000a10: c9 ff 6e 16 91 92 5f f0 f0 61 76 43 f7 d1 5d 4a  ..n..._..avC..]J
00000a20: af f6 d2 26 91 43 71 38 c5 60 ff 8e f6 4a 55 66  ...&.Cq8.`...JUf
00000a30: 91 8a a0 7c b1 71 f2 dd e3 c3 17 68 ac 31 4d a8  ...|.q.....h.1M.
00000a40: c8 c7 f8 67 09 f4 79 93 56 23 7a ec ea f4 7a 7e  ...g..y.V#z...z~
00000a50: c2 c6 8c e9 1c 60 5b 05 a9 f1 bd 34 ce 9e 23 92  .....`[....4..#.
00000a60: 83 41 9b 2d 9c bd d1 3b 03 2d 18 db 27 8a 80 3e  .A.-...;.-..'..>
00000a70: 62 da a8 89 f0 d0 6a e6 53 70 dc 7a de 0a 92 b2  b.....j.Sp.z....
00000a80: a1 96 eb 69 c7 8e 95 9b 57 95 e1 71 9d 5c 1f 92  ...i....W..q.\..
00000a90: 1f 5f 88 f6 a0 e7 0f 80 48 5b ad f8 4c 65 12 91  ._......H[..Le..
00000aa0: a8 82 51 b2 e7 9c 52 2f 27 8e 9a d7 50 9b 07 12  ..Q...R/'...P...
00000ab0: 3b 64 65 7f 30 8c b0 44 7b 86 3d 05 63 78 3d 04  ;de.0..D{.=.cx=.
00000ac0: 9f 53 fd 95 a2 84 b3 60 78 d8 80 36 ad 67 3e 3f  .S.....`x..6.g>?
00000ad0: 92 16 e4 c4 03 6d b7 b8 b8 d0 98 ad e5 31 18 8a  .....m.......1..
00000ae0: c3 f4 3d 16 6c 34 64 4e f6 87 c6 c5 e5 fa 80 8e  ..=.l4dN........
00000af0: a5 1b 98 70 cd ac af aa ee 17 b5 74 95 0f 4d 95  ...p.......t..M.
00000b00: 3a 46 58 fd b4 5f 41 63 e5 cc b5 c0 7a 8b 8d 72  :FX.._Ac....z..r
00000b10: be 2b 01 6d b3 4e af 8d 3c 14 e4 3c e5 b9 67 cd  .+.m.N..<..<..g.
00000b20: c0 93 b3 51 c3 1c 28 93 ff 23 87 73 04 85 2d 5d  ...Q..(..#.s..-]
00000b30: a6 6f 8a 65 3d 3e 6e 52 07 69 ca ca b7 bd 25 16  .o.e=>nR.i....%.
00000b40: 31 d1 6f 6a ec ef 7b da 6f d0 80 6e 0a 0f 19 22  1.oj..{.o..n..."
00000b50: b8 ea ec 2c 72 49 0e 94 2a 30 47 73 38 1a 9a 92  ...,rI..*0Gs8...
00000b60: aa 91 0e 8a 89 d7 f6 19 8d 01 61 26 71 69 41 a3  ..........a&qiA.
00000b70: 9e 6f 9a 2c d4 fa 6b c6 84 f8 e8 39 a5 1a 94 fe  .o.,..k....9....
00000b80: d2 70 12 c9 de 63 50 75 88 5b f5 61 19 d3 29 1e  .p...cPu.[.a..).
00000b90: 35 8c 86 17 dd f1 cc 6a 01 bf 6b 9f 04 ac 25 74  5......j..k...%t
00000ba0: a1 81 7d 63 da c1 5a b4 1c 6e bf 20 83 28 56 51  ..}c..Z..n. .(VQ
00000bb0: 54 a3 72 74 68 16 b0 96 e6 dc 4a 48 76 0b 43 b8  T.rth.....JHv.C.
00000bc0: 55 c8 30 f0 a3 2b f7 b5 c7 8d e0 29 e9 79 21 83  U.0..+.....).y!.
00000bd0: c5 b0 f9 40 7d a5 64 49 47 76 b0 a6 b7 d5 4e c1  ...@}.dIGv....N.
00000be0: e1 ac 41 a5 2d 11 a0 be 88 d0 ad ea 3d f4 3b b7  ..A.-.......=.;.
00000bf0: 37 6b ea b9 d8 26 63 90 cf a9 59 2a 52 0f 4d 8b  7k...&c...Y*R.M.
00000c00: 81 b7 e5 b0 2f 2f c9 42 01 cd fa 26 6e 9c 38 51  ....//.B...&n.8Q
00000c10: eb 13 fa 0f 13 c6 00 e7 6a c7 c2 3f 03 1e ad 0e  ........j..?....
00000c20: f5 ff 37 bc 48 ef 74 08 b2 7a 63 72 2d 2f d2 03  ..7.H.t..zcr-/..
00000c30: 01 ca e2 be 50 2b f3 a6 b8 e5 dc 06 7e 98 11 41  ....P+......~..A
00000c40: 3f a2 de fc d4 8b cb 18 c3 cc f5 28 b3 0b 43 83  ?..........(..C.
00000c50: 32 0d f0 0c 13 52 97 cd 98 d1 17 12 23 e2 39 7f  2....R......#.9.
00000c60: e1 16 00 92 61 3a 0d 69 65 d1 79 7d 05 39 ef 83  ....a:.ie.y}.9..
00000c70: f2 d9 4f fd f7 4c 8a 3f 1a a3 c5 26 e4 79 88 ea  ..O..L.?...&.y..
00000c80: a6 d5 7a c1 8b 93 a7 1b 04 84 b1 12 6d e7 21 c3  ..z.........m.!.
00000c90: 8a cb cc 99 50 c7 93 25 a6 b7 d5 8c db 70 89 fa  ....P..%.....p..
00000ca0: 3c d8 dd 05 f3 0f 88 fe a1 fa 64 fe da d2 0b 4c  <.........d....L
00000cb0: 53 ae a4 ed 1a cc 96 e6 2b f7 0e 98 85 d7 12 86  S.......+.......
00000cc0: 69 2f 97 ff fd 60 bd c8 ac 3b 7e df 92 48 a6 1e  i/...`...;~..H..
00000cd0: be c3 fd 73 16 0f 2b dc 89 c3 fd 65 6e b4 c0 1c  ...s..+....en...
00000ce0: 83 2a 8e ba 27 dc 37 19 b3 ab 28 a3 12 6a 09 c3  .*..'.7...(..j..
00000cf0: 09 a2 f5 f5 8b 1d f3 ba 5b d7 51 82 15 49 ce ef  ........[.Q..I..
00000d00: a4 32 e3 8a 2d 26 f5 9c b8 a5 31 05 42 d9 95 1f  .2..-&....1.B...
00000d10: b9 2b ff 0c 02 1a 9c ca 02 b7 a6 33 e5 d7 f9 66  .+.........3...f
00000d20: d0 d2 b1 cd 84 ab 6c ec 7e 7f 59 2e cf e8 5a 8b  ......l.~.Y...Z.
00000d30: e0 7d 3c a9 6e 0d 94 5d be 47 12 12 d8 22 78 58  .}<.n..].G..."xX
00000d40: a4 d8 b7 43 a5 51 a8 e2 23 69 c4 eb 29 a7 45 df  ...C.Q..#i..).E.
00000d50: ab 74 36 87 6e 69 e0 31 fa 94 04 3b 2c 4b 74 e9  .t6.ni.1...;,Kt.
00000d60: ef db 9d 48 00 e3 5d 49 ca 8e d7 8f 5a 7f de 5f  ...H..]I....Z.._
00000d70: 1f 5b 19 4e e2 ea 5a fc 4b 3d 5e 85 ea af a4 bf  .[.N..Z.K=^.....
00000d80: ad 70 03 5a 57 aa 44 cd 7f 7c 80 3d 7f 11 c1 1d  .p.ZW.D..|.=....
00000d90: f0 ce 1b 3c 73 40 8c 07 5d 97 7a b2 37 ec da 82  ...<s@..].z.7...
00000da0: d6 ec e2 86 d1 60 75 c5 33 50 1b 3e e0 66 96 93  .....`u.3P.>.f..
00000db0: 87 fc 12 f8 e0 d9 9e 07 c5 9e d8 4b 81 34 d3 ba  ...........K.4..
00000dc0: 2f d5 f2 6c ba 29 7c 0c 27 6e d9 7d a7 7e 62 36  /..l.)|.'n.}.~b6
00000dd0: 2e 1e 87 f7 44 3d 8e f3 ce 45 da 2e e6 9b bc 35  ....D=...E.....5
00000de0: e9 fa ed fb 22 6b a2 37 3e 11 e5 39 37 80 12 e4  ...."k.7>..97...
00000df0: 0b 77 f2 60 a9 4d 7c 58 8a 99 96 7b 1e 30 01 19  .w.`.M|X...{.0..
00000e00: 42 a7 25 3d d9 09 40 2b e6 a5 cd 7c ea 9f 58 9c  B.%=..@+...|..X.
00000e10: a8 ad 61 a9 37 a9 a1 a3 9b f2 f3 c4 3e 57 bb 5d  ..a.7.......>W.]
00000e20: 3c d7 41 ef 98 9f db 4f d6 91 06 d6 0a 63 5d e0  <.A....O.....c].
00000e30: ae 2e 7a 3d 97 a7 9b 90 38 f2 e2 b1 0e 9f 57 72  ..z=....8.....Wr
00000e40: 79 a8 55 c7 1c 56 31 5a 7b ce b0 97 71 99 53 37  y.U..V1Z{...q.S7
00000e50: d4 07 49 31 e4 8c 5e db 0a 4f ce 28 53 b7 ff ca  ..I1..^..O.(S...
00000e60: c0 91 72 93 9f de 54 e1 9e ce 52 dc 0e 67 a1 b2  ..r...T...R..g..
00000e70: cc 82 36 b2 67 d0 0b f4 7b db 0f a8 ea 73 d3 a0  ..6.g...{....s..
00000e80: f4 51 5f a7 79 0a 69 3a 72 1a 38 e3 ad 94 11 3c  .Q_.y.i:r.8....<
00000e90: 65 f5 f7 2f bd 59 2d 5a ff f1 dd 54 fa a8 a4 99  e../.Y-Z...T....
00000ea0: d6 e3 f0 43 c3 47 4a b7 95 77 6a bc f2 49 b6 43  ...C.GJ..wj..I.C
00000eb0: 65 63 10 92 5c ae 46 20 3e ae 32 08 be cc e1 39  ec..\.F >.2....9
00000ec0: eb 54 9b ad 13 48 97 ed 09 7a 75 33 e7 b1 7c ef  .T...H...zu3..|.
00000ed0: cf be 8c 8c 73 c4 d7 32 25 a0 86 5e 1f a5 6b 00  ....s..2%..^..k.
00000ee0: d7 90 a0 88 b4 2a 6f ca 82 1a 07 7b c1 9d 59 cc  .....*o....{..Y.
00000ef0: 0e 61 20 e7 c6 b6 d8 08 a3 8a 28 96 c9 e9 71 a1  .a .......(...q.
00000f00: d6 c6 b8 f9 7d 71 ed 64 af 54 d7 0e d4 f3 dc de  ....}q.d.T......
00000f10: c9 85 09 f2 d7 ba bd 87 44 4b 3b 25 b6 e2 00 9e  ........DK;%....
00000f20: ad 87 52 dd 9e e5 02 c3 7b 76 5d bd eb d5 91 6f  ..R.....{v]....o
00000f30: 86 b2 f4 db df f1 07 6e 13 03 de 60 f5 1a d8 b3  .......n...`....
00000f40: d4 f7 34 32 cf 9b 87 8e d5 48 29 fb fe 67 22 75  ..42.....H)..g"u
00000f50: e0 69 1c 4d 2a e3 bd 30 6f 60 82 f9 74 92 58 3a  .i.M*..0o`..t.X:
00000f60: 96 d7 c6 d3 6e 97 54 0c 60 bc 1e 86 4c 44 1f 3b  ....n.T.`...LD.;
00000f70: f5 94 3c ae d9 79 1f c8 7f 63 17 8b a3 83 8a 9a  ..<..y...c......
00000f80: 8a 72 ef 7d 14 4e 42 23 f8 62 7c 26 af ad 6d b6  .r.}.NB#.b|&..m.
00000f90: d9 de e6 e7 64 61 05 76 e5 b4 0d 11 ea 4e 4e 61  ....da.v.....NNa
00000fa0: 02 56 d0 f1 dc 58 db 3f e8 be 34 cb 69 2a a7 69  .V...X.?..4.i*.i
00000fb0: 20 a2 42 bc b0 4e 29 74 34 1a ff d9 d3 8c b0 6e   .B..N)t4......n
00000fc0: 01 75 87 cc 65 30 8b 55 0b e7 30 4b e7 29 73 5e  .u..e0.U..0K.)s^
00000fd0: e6 81 c3 d0 cb 2d 88 d6 f5 51 4b 59 d6 82 1c b7  .....-...QKY....
00000fe0: a7 8f a1 a6 13 6a 43 47 ab da 10 4d e6 26 1d 9e  .....jCG...M.&..
00000ff0: cd 5a 88 e0 78 1f 2b 6e eb f3 69 2a 83 15 c3 32  .Z..x.+n..i*...2


    Наглядно видно, что файл редактировался (трижды), от нашего текста к сожалению ничего не осталось. Количество необходимых редактирований может быть задано. На некоторых ВЗУ (где не применим метод Listen) достаточно одного редактирования.
    Добавим одну из доступных опций [-u] и запустим редактор еще раз [shred -vu /tmp/1].


.!.:.!. shred -vu /tmp/1
shred: /tmp/1: pass 1/3 (random)...
shred: /tmp/1: pass 2/3 (random)...
shred: /tmp/1: pass 3/3 (random)...
shred: /tmp/1: removing
shred: /tmp/1: renamed to /tmp/0
shred: /tmp/1: removed


    Содержимое файла [/tmp/1] снова было трижды отредактировано. Благодаря дополнительной опции [-u] файл был переименован в [/tmp/0], а затем успешно удален.
    Убеждаемся через команду [ls -l /tmp].


.!.:.!. ls -l /tmp
total 0


    Мы рассмотрели процесс создания, редактирования, переименования и удаления файла на уровне пользователя стандартными способами.
    Главное помнить, что редакторы бывают разные. С разнообразными автоматическими настройками. Запускающиеся по времени. Умеющие редактировать не только указанные файлы, но и без проблем неиспользуемое дисковое пространство, BAD, служебные области, temp, swap.
    Если нет возможности в данный момент запустить редактор, можно после стандартных манипуляций с файлами методом копирования забить все доступное пространство большими файлами (все гениальное - просто), если понравилось удалить накопированное и начать сначала.

    Очень плохо когда в памяти нарастает хаос вместо порядка. Порядок не нужно наводить, его достаточно поддерживать. Иначе наведение порядка превращается в пожар, а огонь без разбора очищает все.

1.9. Level 1

    Вы реально дошли до данного пункта, теперь смело можете присвоить себе 1 уровень по CS. Думаю будет чем заняться в свободное время.

------------- ---- ------

Copyright (C) 1990-2018 Free Software DavydovMA

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.