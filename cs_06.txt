Project         : txt.cs
Release version : 1.6.43
Last update     : 2018-10-02
------------- ---- ------
file            : cs_06.txt

Шифрование симметричное.

6. Шифрование симметричное.

    Не ждите методик, не ждите готовых рецептов, не следуйте примерам на то они и примеры, включайте мозг, генерите не логично-абсурдную фантазию и применяйте на практике, не злорадствуйте над теми кто прежде смеялся над всем этим и потерпел неудачу - не теряйте времени, а идите и достигайте цели.
    "Вы кладете в сундук сообщение и запираете его ключом, но тот кто добудет ваш ключ или его копию, сможет открыть сундук." ист.lxf-2013-174.

6.1. Шифрование симметричное.

    "В стандартном симметричном шифровании для шифрования и дешифровки используется один и тот же ключ, и для передачи зашифрованного сообщения стороны должны обменяться ключом. Но раз уж стороны могут обменяться ключами так, что ключи никому нельзя перехватить, то тем же способом можно послать и сообщение." ист.lxf-2013-174. Одним словом данный способ больше имеет смысл применять локально (на месте).
    Существует масса программ позволяющие произвести шифрование файла данным способом. Основной вопрос доверия.

    Вы можете не верить, но было время тоже писал на первом компьютере программу для шифрования. А потом програму для дешифрования и поиска источника. Вспоминаю, смеюсь, понимаю какой наивный тогда был. Но какие наивные были те кто пользовался ими - они же реально верили в их мощь.

6.2. Local Crypt Media.

    Local Crypt Media - локальное (местное, на месте) шифрование носителя (ВЗУ). Существует масса инструментов, и как вы уже догадались имя им легион, позволяющие создать защищенное хранилице. Защищенное хранилище может быть создано как в виде файла, доступ к которому предоставляется аналогично ВЗУ, так и полным шифрованием всего ВЗУ. Причем во втором случае это позволяет оградить от посягательств даже саму ОС до начала загрузки. Согласитесь неприятно обронить и без того миниатюрный носитель и гадать в чьих руках он оказалися, и можно спать как младенец если не забыли про скорлупку. Конечно же шифрование влияет отрицательно на скорость доступа (одна из составляющих стоимости защиты). Шифрование осуществляется в фоновом режиме. Не запрещено применять дополнительное шифрование файлов иными способами. По сути внешне работа ничем не отличается от работы с ВЗУ. ист.lxf-2017-227.

6.3. Hidden LCM.

    Hidden - скрытый. "Скрытый том дает дополнительное преимущество в виде способности отрицать. В терминах безопасности это означет, что даже после того, как вас заставят выдать пароль для зашифрованного тома, вы можете убедительно отрицать существование других зашифрованных томов." ист.lxf-2017-218. Собственно без комментариев, но не забываем, читать умеете не только вы.

6.4. Fake LCM.

    Fake - фальшивый. Обычно используется для введения в заблуждение или намеренного дезинформирования. И это касается не только LCM, но и компьютеров, серверов, сетей, хранилищ данных и фантазия вам в помощь. И чем больше тем веселей, и вот здесь соглашусь "...просящему у тебя дай..." и "...сотрудничать как бы не сопротивлялись...".

6.5. Наглядно.

    Не зашифрованный сектор на диске.


00000000: 43 6f 70 79 72 69 67 68 74 20 28 43 29 20 31 39  Copyright (C) 19
00000010: 39 30 2d 32 30 31 38 20 46 72 65 65 20 53 6f 66  90-2018 Free Sof
00000020: 74 77 61 72 65 20 6d 41 64 61 76 79 64 6f 76 2c  tware DavydovMA,
00000030: 20 49 6e 63 2e 0a 0a 54 68 69 73 20 70 72 6f 67   Inc...This prog
00000040: 72 61 6d 20 69 73 20 66 72 65 65 20 73 6f 66 74  ram is free soft
00000050: 77 61 72 65 3a 20 79 6f 75 20 63 61 6e 20 72 65  ware: you can re
00000060: 64 69 73 74 72 69 62 75 74 65 20 69 74 20 61 6e  distribute it an
00000070: 64 2f 6f 72 20 6d 6f 64 69 66 79 0a 69 74 20 75  d/or modify.it u
00000080: 6e 64 65 72 20 74 68 65 20 74 65 72 6d 73 20 6f  nder the terms o
00000090: 66 20 74 68 65 20 47 4e 55 20 47 65 6e 65 72 61  f the GNU Genera
000000a0: 6c 20 50 75 62 6c 69 63 20 4c 69 63 65 6e 73 65  l Public License
000000b0: 20 61 73 20 70 75 62 6c 69 73 68 65 64 20 62 79   as published by
000000c0: 0a 74 68 65 20 46 72 65 65 20 53 6f 66 74 77 61  .the Free Softwa
000000d0: 72 65 20 46 6f 75 6e 64 61 74 69 6f 6e 2c 20 65  re Foundation, e
000000e0: 69 74 68 65 72 20 76 65 72 73 69 6f 6e 20 33 20  ither version 3 
000000f0: 6f 66 20 74 68 65 20 4c 69 63 65 6e 73 65 2c 20  of the License, 
00000100: 6f 72 0a 28 61 74 20 79 6f 75 72 20 6f 70 74 69  or.(at your opti
00000110: 6f 6e 29 20 61 6e 79 20 6c 61 74 65 72 20 76 65  on) any later ve
00000120: 72 73 69 6f 6e 2e 0a 0a 54 68 69 73 20 70 72 6f  rsion...This pro
00000130: 67 72 61 6d 20 69 73 20 64 69 73 74 72 69 62 75  gram is distribu
00000140: 74 65 64 20 69 6e 20 74 68 65 20 68 6f 70 65 20  ted in the hope 
00000150: 74 68 61 74 20 69 74 20 77 69 6c 6c 20 62 65 20  that it will be 
00000160: 75 73 65 66 75 6c 2c 0a 62 75 74 20 57 49 54 48  useful,.but WITH
00000170: 4f 55 54 20 41 4e 59 20 57 41 52 52 41 4e 54 59  OUT ANY WARRANTY
00000180: 3b 20 77 69 74 68 6f 75 74 20 65 76 65 6e 20 74  ; without even t
00000190: 68 65 20 69 6d 70 6c 69 65 64 20 77 61 72 72 61  he implied warra
000001a0: 6e 74 79 20 6f 66 0a 4d 45 52 43 48 41 4e 54 41  nty of.MERCHANTA
000001b0: 42 49 4c 49 54 59 20 6f 72 20 46 49 54 4e 45 53  BILITY or FITNES
000001c0: 53 20 46 4f 52 20 41 20 50 41 52 54 49 43 55 4c  S FOR A PARTICUL
000001d0: 41 52 20 50 55 52 50 4f 53 45 2e 20 20 53 65 65  AR PURPOSE.  See
000001e0: 20 74 68 65 0a 47 4e 55 20 47 65 6e 65 72 61 6c   the.GNU General
000001f0: 20 50 75 62 6c 69 63 20 4c 69 63 65 6e 73 65 20   Public License 


    А теперь зашифрованный сектор на диске.


00000000: 86 08 de 3e ab 65 27 62 05 91 c5 0a 42 3d 70 b9  ...>.e'b....B=p.
00000010: 40 b8 b6 ce b1 21 fb d1 39 f8 51 d6 9f bb 1e b4  @....!..9.Q.....
00000020: 4c 71 1c 49 64 c4 aa eb 9b 0c 64 c8 58 bc 2b eb  Lq.Id.....d.X.+.
00000030: c7 7c 48 71 48 b0 b4 18 65 df 44 0e cb 25 67 ec  .|HqH...e.D..%g.
00000040: 5c 49 80 ce 03 48 a3 fd 06 75 a4 76 2e 69 40 66  \I...H...u.v.i@f
00000050: 44 5a 12 e0 b3 0b b1 3d 87 95 e2 83 14 d9 4b 19  DZ.....=......K.
00000060: f7 bb 0e f8 d7 f8 42 99 6c e4 ac e3 d3 1d 18 fa  ......B.l.......
00000070: ab 8e ed c8 8d 06 7a a5 84 64 cc c7 67 07 0d 8e  ......z..d..g...
00000080: 48 40 0f 65 ec ad 7d 37 be 58 0c bc 67 d2 e5 3a  H@.e..}7.X..g..:
00000090: d5 15 53 14 76 10 3b 2f 99 e3 ff d2 72 d5 50 79  ..S.v.;/....r.Py
000000a0: 6d 7d 04 65 42 a0 eb 01 0b a5 89 6b 59 b9 6e 1c  m}.eB......kY.n.
000000b0: 7e 77 70 f9 2d 5d 07 3f 85 9c e3 f7 dd 83 80 01  ~wp.-].?........
000000c0: 98 12 d6 18 b9 fe 19 1b 37 86 88 dd 6c df d4 96  ........7...l...
000000d0: 12 27 1c da c6 50 85 32 5f f6 4d 54 da 7f 66 6e  .'...P.2_.MT..fn
000000e0: 30 a6 cc da ea 4e c5 41 c6 73 90 96 5e 7a ce 59  0....N.A.s..^z.Y
000000f0: 6d 2d 35 61 a4 a6 e9 68 14 2d fe 9c 5a 34 75 7f  m-5a...h.-..Z4u.
00000100: 94 4b 4c 09 5d 26 1c e2 99 ef f8 6c be ed 50 f5  .KL.]&.....l..P.
00000110: db 8b 7d a7 41 db e0 0b db 9b d8 3d 57 39 3b 15  ..}.A......=W9;.
00000120: 3b 48 ef 7b a7 cb f9 72 b8 d3 8b 64 7a 5d 3d 2f  ;H.{...r...dz]=/
00000130: 37 06 a0 8e 92 e9 8f c6 b6 70 ea 70 cf 04 92 00  7........p.p....
00000140: 21 b8 88 9d 7f 61 d5 ab 88 43 32 be 42 a1 8a 0d  !....a...C2.B...
00000150: f0 79 f6 2c de 1c f7 5a da d3 e1 77 37 f5 2e c2  .y.,...Z...w7...
00000160: 1e 5d f8 c6 4c 23 d0 e4 74 66 0c be d9 1d 68 d9  .]..L#..tf....h.
00000170: 36 ae 66 68 b7 52 3c 37 ed 99 2c 2c c7 04 08 5f  6.fh.R<7..,,..._
00000180: 1c ec fc ca c0 b5 5b ea dc c5 b2 5e d2 aa ce 5d  ......[....^...]
00000190: c0 55 be 9c 18 1d 33 f5 0c f8 2e a3 95 e8 93 3d  .U....3........=
000001a0: 62 ec 88 34 9c 55 f4 8c 7b 73 d8 75 56 65 ab 1c  b..4.U..{s.uVe..
000001b0: cf 07 55 31 8d d4 84 a8 b9 23 f9 bd 69 47 a9 e7  ..U1.....#..iG..
000001c0: ff 5b fc 75 5f 5d dc ee 5d 54 09 51 14 cd ea f3  .[.u_]..]T.Q....
000001d0: e4 08 75 19 cf 9d 63 d3 07 09 43 e2 5a 08 d8 4f  ..u...c...C.Z..O
000001e0: b8 90 f9 9c 56 8b a8 64 74 84 c0 7e 44 17 ea 1f  ....V..dt..~D...
000001f0: 86 1d db f9 51 29 3f c6 d7 a2 75 f4 53 6b 55 e2  ....Q)?...u.SkU.


    ВАККУМ это рандом ;).

6.6. Разминка для пальчиков.

    "...мы писали, мы писали, наши пальчики устали, мы немножко отдохнем и опять писать начнем..."
    Давайте пощупаем что-нибудь попроще из доступного, например практически вездесущий [cryptsetup]. 

6.6.0. Документация.

    Сначала внимательно, вдумчиво читаем описание (незабываем при этом морщить лобик).


example > man cryptsetup


    Для выхода из описания программы надо сказать "КУ" нажатием клавиши [q].

6.6.1. Песочница.

    Так как все по сути можно рассматривать в виде файла, то и мы заведем подопытных.

6.6.1.0. На всякий случай сразу переходим в каталог [/tmp].


example > cd /tmp


6.6.1.1. Проверяем содержимое каталога [/tmp].


example > ls -l /tmp
total 0


6.6.1.2. Создадим командой [dd] (ВНИМАНИЕ!!! ОЧЕНЬ ОСТРЫЙ ИНСТРУМЕНТ!!!) в каталоге [/tmp] файл [disk.def] размером 10Mib (1024 * 10000). Содержимое файла наполним нулями из специального бесконечного устройства [/dev/zero]. Для информативности добавим [status=progress].


example > dd if=/dev/zero of=/tmp/disk.def bs=1024 count=10000 status=progress
10000+0 records in
10000+0 records out
10240000 bytes (10 MB, 9.8 MiB) copied, 0.****** s, **.* MB/s


6.6.1.3. Проверяем содержимое каталога [/tmp] на наличие созданного файла [disk.def].


example > ls -l /tmp
total 10000
-rw-r--r-- 1 root root 10240000 Apr  6 20:13 disk.def


6.6.1.4. Посмотрим на содержимое файла [disk.def]. Для постраничного просмотра, здесь (а далее сами) добавлена команда [ | less ], которая осуществляет поэкранный вывод, пролистывание следующего экрана осуществляется нажатием клавиши [ПРОБЕЛ], прекращение пролистывания "КУ" нажатием клавиши [q].


example > xxd -g 1 /tmp/disk.def | less
00000000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
... чик-чик-чик ...
009c3f60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3f70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3f80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3f90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fa0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................


   А теперь обратим внимание на примеры из открытых источников.

6.6.2. LUKS для malvina.

6.6.2.0. Скопируем файл [disk.def] в новый файл [disk.malvina]. Для большей информативности везде, где это возможно, будет добавлена опция [ -v ].


example > cp -v /tmp/disk.def /tmp/disk.malvina
'disk.def' -> 'disk.malvina'


6.6.2.1. Проверяем содержимое каталога [/tmp] на наличие скопированного файла [disk.malvina].


example > ls -l /tmp
total 20000
-rw-r--r-- 1 root root 10240000 Apr  6 20:13 disk.def
-rw-r--r-- 1 root root 10240000 Apr  6 20:13 disk.malvina


6.6.2.2. Посмотрим на содержимое файла [disk.malvina].


example > xxd -g 1 /tmp/disk.malvina
00000000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
... чик-чик-чик ...
009c3f60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3f70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3f80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3f90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fa0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................


    Вы реально надеялись увидеть что-то новое, это же копия.

6.6.2.3. Создание зашифрованного хранилища. Применив команду [luksFormat] (следим за РеГиСтРом) к файлу [disk.malvina] запускаем процесс инициализации защищенного хранилища. После уведомления о том, что все данные на [disk.malvina] будут перезаписаны на вопрос [Are you sure?](В своем лы ТЫ уме?) отвечаем В ВЕРХНЕМ регистре [YES] и подтверждаем нажатием клавиши [ENTER]. Далее дважды вводим и самое главное НЕЗАБЫВАЕМ ключ/пароль. Этот шаг делается в начале и ОДИН РАЗ.


example > cryptsetup -v luksFormat /tmp/disk.malvina

WARNING!
========
This will overwrite data on /tmp/disk.malvina irrevocably.

Are you sure? (Type uppercase yes): YES
Enter passphrase for disk.malvina: 
Verify passphrase: 
Command successful.


6.6.2.4. Перепроверяем содержимое каталога [/tmp]. Внешне ничего не изменилось (это как посмотреть;) ).


example > ls -l /tmp
total 20000
-rw-r--r-- 1 root root 10240000 Apr  6 20:13 disk.def
-rw-r--r-- 1 root root 10240000 Apr  6 20:13 disk.malvina


6.6.2.5. Посмотрим на содержимое файла [disk.malvina]. Видим изменения и даже явно указывающие на присутствие LUKS содержимое/шифрование.


example > xxd -g 1 /tmp/disk.malvina
00000000: 4c 55 4b 53 ba be 00 01 61 65 73 00 00 00 00 00  LUKS....aes.....
00000010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000020: 00 00 00 00 00 00 00 00 78 74 73 2d 70 6c 61 69  ........xts-plai
00000030: 6e 36 34 00 00 00 00 00 00 00 00 00 00 00 00 00  n64.............
00000040: 00 00 00 00 00 00 00 00 73 68 61 32 35 36 00 00  ........sha256..
00000050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000060: 00 00 00 00 00 00 00 00 00 00 10 00 00 00 00 20  ............... 
00000070: 4c f5 f1 3c 63 ba 99 f7 ab 77 76 23 c8 de 8f a6  L..<c....wv#....
00000080: e8 fe a7 9f 09 29 72 38 6b bd 3d fe ef ac a7 6d  .....)r8k.=....m
00000090: 8e 93 13 7a 15 42 f2 7e ee 20 10 b0 c7 cf 02 b9  ...z.B.~. ......
... хрум-хрум-хрум ...
009c3f60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3f70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3f80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3f90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fa0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................


6.6.2.6. Никто не запрещает читать содержимое файл [disk.malvina], но оно уже зашифровано. При считывании получаются зашифрованные данные (мусор). Чтобы начать считывать дешифрованные данные следует открыть "окно".

6.6.2.7. Открытие - дешифрование содержимого файла. Первая процедура перед использованием зашифрованного хранилица. Применив команду [luksOpen] (следим за РеГиСтРоМ) к файлу [disk.malvina] и указав (любое удобное) имя открываем устройство [malvina] "окно". Не забываем подтвердить ключ/пароль.


example > cryptsetup -v luksOpen /tmp/disk.malvina malvina
Enter passphrase for /tmp/disk.malvina: 
Key slot 0 unlocked.
Command successful.


6.6.2.8. Дешифрованное содержимое файла [disk.malvina] начинает отражаться через устройство по имени [malvina] "окно". Проверяем наличие появившегося устройства по имени [malvina] в каталоге устройств [/dev/mapper].


example > ls -l /dev/mapper/
total 0
lrwxrwxrwx 1 root root       7 Apr  6 20:13 malvina -> ../dm-*


6.6.2.9. Создадим каталог [dir_malvina]. Этот каталог станет местом после монтирования устройства [malvina] и отображения "окна" (mount и umount чем-то похожи на процесс подключения/отключения ВЗУ флэшки.)


example > mkdir /tmp/dir_malvina


6.6.2.10. Перепроверяем содержимое каталога [/tmp] на наличие созданного каталога [dir_malvina].


example > ls -l /tmp
total 20004
drwxr-xr-x 2 root root     4096 Apr  6 20:13 dir_malvina
-rw-r--r-- 1 root root 10240000 Apr  6 20:13 disk.def
-rw-r--r-- 1 root root 10240000 Apr  6 20:13 disk.malvina


6.6.2.11. Проверяем содержимое каталога [dir_malvina].


example > ls -l /tmp/dir_malvina
total 0


6.6.2.12. Исключительно в целях получения "горького", но полезного опыта пытаемся смонтировать командой [mount] устройство [malvina] в каталог [dir_malvina].


example > mount /dev/mapper/malvina /tmp/dir_malvina
mount: /tmp/dir_malvina: wrong fs type, bad option, bad superblock on /dev/mapper/malvina, missing codepage or helper program, or other error.


    Проблема заключается в том, что наше устройство еще не содержит никакой Файловой системы, и потому не может быть смонтировано.

6.6.2.13. Посмотрим на содержимое устройства по имени [malvina].


example > xxd -g 1 /dev/mapper/malvina
00000000: 1e 3c 77 16 40 01 cc b3 60 9c 7b 3c c6 a5 0e 81  .<w.@...`.{<....
00000010: 87 b2 e0 89 8d 26 2a ac 28 74 a9 58 94 50 3d 2c  .....&*.(t.X.P=,
00000020: b3 f4 be b5 e5 4c 0d 23 3e 1f 49 43 17 1f 90 15  .....L.#>.IC....
00000030: 33 26 b1 f9 c8 6f 04 3a fb 49 9f 3c 6a ff 27 e9  3&...o.:.I.<j.'.
00000040: 78 23 87 9d 28 0c c3 6b ea 24 85 5f 46 7d 69 d3  x#..(..k.$._F}i.
00000050: 47 d7 49 9f 99 0d 5b dc e4 4b 1a cc 26 27 ee 28  G.I...[..K..&'.(
00000060: 6e 78 cb 63 99 e9 13 5a 9d c5 61 44 63 e0 c2 37  nx.c...Z..aDc..7
00000070: 47 f6 57 d9 52 ae 59 5f f1 80 69 3f f4 89 fd dd  G.W.R.Y_..i?....
00000080: 67 3d 99 4b 8c bf f5 59 d7 b2 78 71 2c e1 6c 32  g=.K...Y..xq,.l2
00000090: 6b 1f f3 4a fd 3a 47 23 7b 23 9f d2 fa 07 c2 a4  k..J.:G#{#......
... вах-вах-вах ...
007c3f60: dc 4f 48 69 ba 0f 12 a6 a4 bf da 86 3c d2 aa 25  .OHi........<..%
007c3f70: de 84 8e a6 eb 9c 4d a1 3d 58 34 27 4d db 71 86  ......M.=X4'M.q.
007c3f80: f0 f4 fa 9d 75 f2 f9 b3 68 ef 0a dd 62 6b 65 f8  ....u...h...bke.
007c3f90: 02 a8 6b 9c 04 f4 b3 df 83 fe 5c 08 8f b7 46 98  ..k.......\...F.
007c3fa0: 97 33 cd 87 4f cb e5 96 73 e8 71 40 e5 6f 28 5b  .3..O...s.q@.o([
007c3fb0: a0 08 21 c9 38 eb 78 8a 15 05 31 a3 b5 ec f7 c4  ..!.8.x...1.....
007c3fc0: 81 a9 dd 2f 06 50 ac 67 c9 f0 43 38 43 66 24 e3  .../.P.g..C8Cf$.
007c3fd0: c3 37 f4 52 d0 54 8a 1a 14 23 99 85 1c 7c 32 ac  .7.R.T...#...|2.
007c3fe0: 85 52 a8 c9 25 b1 9a db c9 6c 4a cb 35 39 ba 86  .R..%....lJ.59..
007c3ff0: 7b 5e 91 16 f9 87 3f a9 2a 34 1d 75 9d 16 94 91  {^....?.*4.u....


6.6.2.14. Создадим (отформатируем) простенькую Файловую систему [fat] командой [mkfs.*] на устройстве по имени [malvina]. Этот шаг делается в начале и ОДИН РАЗ.


example > mkfs.fat -v /dev/mapper/malvina 
mkfs.fat *.* (****-**-**)
/dev/mapper/malvina has 64 heads and 32 sectors per track,
hidden sectors 0x0000;
logical sector size is 512,
using 0xf8 media descriptor, with 15904 sectors;
drive number 0x80;
filesystem has 2 12-bit FATs and 4 sectors per cluster.
FAT size is 12 sectors, and provides 3961 clusters.
There are 4 reserved sectors.
Root directory contains 512 slots and uses 32 sectors.
Volume ID is 5d6b7c80, no volume label.


6.6.2.15. Посмотрим на содержимое устройства по имени [malvina].


example > xxd -g 1 /dev/mapper/malvina
00000000: eb 3c 90 6d 6b 66 73 2e 66 61 74 00 02 04 04 00  .<.mkfs.fat.....
00000010: 02 00 02 20 3e f8 0c 00 20 00 40 00 00 00 00 00  ... >... .@.....
00000020: 00 00 00 00 80 01 29 80 7c 6b 5d 4e 4f 20 4e 41  ......).|k]NO NA
00000030: 4d 45 20 20 20 20 46 41 54 31 32 20 20 20 0e 1f  ME    FAT12   ..
00000040: be 5b 7c ac 22 c0 74 0b 56 b4 0e bb 07 00 cd 10  .[|.".t.V.......
00000050: 5e eb f0 32 e4 cd 16 cd 19 eb fe 54 68 69 73 20  ^..2.......This 
00000060: 69 73 20 6e 6f 74 20 61 20 62 6f 6f 74 61 62 6c  is not a bootabl
00000070: 65 20 64 69 73 6b 2e 20 20 50 6c 65 61 73 65 20  e disk.  Please 
00000080: 69 6e 73 65 72 74 20 61 20 62 6f 6f 74 61 62 6c  insert a bootabl
00000090: 65 20 66 6c 6f 70 70 79 20 61 6e 64 0d 0a 70 72  e floppy and..pr
... хм-хм-хм ...
007c3f60: dc 4f 48 69 ba 0f 12 a6 a4 bf da 86 3c d2 aa 25  .OHi........<..%
007c3f70: de 84 8e a6 eb 9c 4d a1 3d 58 34 27 4d db 71 86  ......M.=X4'M.q.
007c3f80: f0 f4 fa 9d 75 f2 f9 b3 68 ef 0a dd 62 6b 65 f8  ....u...h...bke.
007c3f90: 02 a8 6b 9c 04 f4 b3 df 83 fe 5c 08 8f b7 46 98  ..k.......\...F.
007c3fa0: 97 33 cd 87 4f cb e5 96 73 e8 71 40 e5 6f 28 5b  .3..O...s.q@.o([
007c3fb0: a0 08 21 c9 38 eb 78 8a 15 05 31 a3 b5 ec f7 c4  ..!.8.x...1.....
007c3fc0: 81 a9 dd 2f 06 50 ac 67 c9 f0 43 38 43 66 24 e3  .../.P.g..C8Cf$.
007c3fd0: c3 37 f4 52 d0 54 8a 1a 14 23 99 85 1c 7c 32 ac  .7.R.T...#...|2.
007c3fe0: 85 52 a8 c9 25 b1 9a db c9 6c 4a cb 35 39 ba 86  .R..%....lJ.59..
007c3ff0: 7b 5e 91 16 f9 87 3f a9 2a 34 1d 75 9d 16 94 91  {^....?.*4.u....


    Явно видно наличие файловой системы [FAT12].

6.6.2.16. В учебных целях имеет смысл взглянуть на содержимое файла [disk.malvina].


example > xxd -g 1 disk.malvina
00000000: 4c 55 4b 53 ba be 00 01 61 65 73 00 00 00 00 00  LUKS....aes.....
00000010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000020: 00 00 00 00 00 00 00 00 78 74 73 2d 70 6c 61 69  ........xts-plai
00000030: 6e 36 34 00 00 00 00 00 00 00 00 00 00 00 00 00  n64.............
00000040: 00 00 00 00 00 00 00 00 73 68 61 32 35 36 00 00  ........sha256..
00000050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000060: 00 00 00 00 00 00 00 00 00 00 10 00 00 00 00 20  ............... 
00000070: 4c f5 f1 3c 63 ba 99 f7 ab 77 76 23 c8 de 8f a6  L..<c....wv#....
00000080: e8 fe a7 9f 09 29 72 38 6b bd 3d fe ef ac a7 6d  .....)r8k.=....m
00000090: 8e 93 13 7a 15 42 f2 7e ee 20 10 b0 c7 cf 02 b9  ...z.B.~. ......
... цок-цок-цок ...
009c3f60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3f70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3f80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3f90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fa0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................


    Хотя содержимое изменилось оно зашифровано.

6.6.2.17. Смонтируем (подключаем) командой [mount] устройство по имени [malvina] в каталог [dir_malvina].


example > mount -v /dev/mapper/malvina /tmp/dir_malvina/
mount: /dev/mapper/malvina mounted on /tmp/dir_malvina.


6.6.2.18. Проверяем, РАЗ, монтирование устройства по имени [malvina] в точку монтирования [/tmp/dir_malvina].


example > mount | grep malvina
/dev/mapper/malvina on /tmp/dir_malvina type vfat (rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=ascii,shortname=mixed,showexec,utf8,flush,errors=remount-ro)


6.6.2.19. Проверяем, ДВА, монтирование устройства по имени [malvina] в точку монтирования [/tmp/dir_malvina]. Команда [ | grep malvina ] отфильтровывает вывод, уберите ее и получите полный список.


example > df | grep malvina
Filesystem          1K-blocks      Used Available Use% Mounted on
/dev/mapper/malvina      7922         0      7922   0% /tmp/dir_malvina


    Сразу обращаем внимание на использованное (Used) пространство.

6.6.2.20. Проверяем содержимое каталога [dir_malvina], а по сути уже содержимое защищенного хранилица причем стандартными средствами ОС.


example > ls -l /tmp/dir_malvina
total 0


6.6.2.21. Командой [echo] создадим файл [me.txt] в каталоге [dir_malvina]. (Все это время никто не запрещает в учебных целях исследовать содержимое устройства по имени [malvina] и файла [disk.malvina].)


example > echo "123456789" > /tmp/dir_malvina/me.txt


6.6.2.22. Проверяем содержимое каталога [dir_malvina] на предмет наличия файла [me.txt].


example > ls -l /tmp/dir_malvina
total 2
-rw-r--r-- 1 root root 10 Apr  6 20:13 me.txt


6.6.2.23. Посмотрим на содержимое файла [me.txt] одним инструментом.


example > cat /tmp/dir_malvina/me.txt
123456789


6.6.2.24. Посмотрим на содержимое файла [me.txt] другим инструментом.


example > xxd -g 1 /tmp/dir_malvina/me.txt
00000000: 31 32 33 34 35 36 37 38 39 0a                    123456789.


6.6.2.25. Обращаем внимание на то, что дисковое пространство устройства по имени [malvina] начало использоваться (Used) файлом [me.txt].


example > df | grep malvina
Filesystem          1K-blocks      Used Available Use% Mounted on
/dev/mapper/malvina      7922         2      7920   1% /tmp/dir_malvina


6.6.2.26. Размонтируем (отключим) командой [umount] устройство по имени [malvina] от точки монтирования [dir_malvina]. Если все файлы закрыты и устройство незаблокировано никаких "непонятно пугающих" сообщений быть не должно.


example > umount -v /dev/mapper/malvina
umount: /tmp/dir_malvina (/dev/mapper/malvina) unmounted


6.6.2.27. Проверяем содержимое каталога [dir_malvina], содержимое устройства по имени [malvina] "исчезло".


example > ls -l /tmp/dir_malvina
total 0


6.6.2.28. Закрытие содержимого файла. Применив команду [close] закроем устройство по имени [malvina] "окно". ОБЯЗАТЕЛЬНО надо Закрыть.


example > cryptsetup -v close /dev/mapper/malvina
Command successful.


6.6.2.29. Проверяем содержимое каталога [/dev/mapper] на отсутствие устройства по имени [malvina].


example > ls -l /dev/mapper/
total 0


6.6.2.30. В дальнейшем работа с зашифрованным хранилищем сводится к:

      1. Создание точки монтирования (mkdir);
      2. Открытие файла (openLuks);
      3. Монтирование устройства (mount);
      4. РАБОТА стандартными средствами ОС;
      5. Размонтирование устройства (umount);
      6. Закрытие файла (close).

    При наличии графической среды все пункты кроме [4] автоматизируются.
    Пункт [5] может не выполняться если не все файлы были закрыты и точка монтирования еще используется.
    Пункт [6] может не выолняться если не завершен [5] пункт.

6.6.2.31. Пример сообщения о невозможности закрытия устройства т.к. оно еще используется/захвачено.


example > cryptsetup -v close malvina
Device malvina is still in use.
Command failed with code -5 (device already exists or device is busy).


6.6.2.32. Дополнительно имеет смысл обратить внимание на возможность создания нескольких (разных) ключей/паролей для работы с зашифрованным хранилищем (каждый со своим ключом/паролем).

6.6.2.33. Применив команду [luksAddKey] создадим дополнительный ключ/пароль. Сначала вводится текущий ключ/пароль, затем дважды дополнительный новый ключ/пароль.


example > cryptsetup -v luksAddKey /tmp/disk.malvina
Enter any existing passphrase: 
No key available with this passphrase.
Command failed with code -2 (no permission or bad passphrase).

example > cryptsetup -v luksAddKey /tmp/disk.malvina
Enter any existing passphrase: 
Key slot 0 unlocked.
Enter new passphrase for key slot: 
Verify passphrase: 
Key slot 0 unlocked.
Command successful.


6.6.2.34. Применив команду [luksOpen] к файлу [disk.malvina] пробуем открыть дополнительным ключом/паролем.


example > cryptsetup -v luksOpen /tmp/disk.malvina malvina
Enter passphrase for disk.malvina: 
Key slot 1 unlocked.
Command successful.


    Обратите внимание на используемый [slot 1].

6.6.2.35. Предварительно закрыв командой [close] применяем команду [luksOpen] к файлу [disk.malvina] пробуем открыть первичным ключом/паролем.


example > cryptsetup -v luksOpen /tmp/disk.malvina malvina
Enter passphrase for disk.malvina: 
No key available with this passphrase.
Enter passphrase for disk.malvina: 
Key slot 0 unlocked.
Command successful.


    Обратите внимание на используемый [slot 0].

6.6.2.36. Хотя описание и длинное получилось в реальности все намного проще и быстрей происходит.

6.6.3. Plain для buratino.

    Для полноты картины рассмотрим еще один присутствующий тип в программе (а есть и еще). В принципе тоже самое, а потому можно бегло пробежаться.

6.6.3.0. Скопируем файл [disk.def] в новый файл [disk.buratino].


example > cp -v /tmp/disk.def /tmp/disk.buratino
'disk.def' -> 'disk.buratino'


6.6.3.1. Проверим содержимое каталога [/tmp] на наличие нового файла [disk.buratino].


example > ls -l /tmp
total 30004
drwxr-xr-x 2 root root     4096 Apr  6 20:13 dir_malvina
-rw-r--r-- 1 root root 10240000 Apr  6 20:13 disk.buratino
-rw-r--r-- 1 root root 10240000 Apr  6 20:13 disk.def
-rw-r--r-- 1 root root 10240000 Apr  6 20:13 disk.malvina


6.6.3.2. Посмотрим на содержимое файла [disk.buratino] (традиция такая).


example > xxd -g 1 /tmp/disk.buratino
00000000: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000080: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
00000090: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
... чик-чик-чик ...
009c3f60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3f70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3f80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3f90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fa0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................


6.6.3.3. В режиме Plain содержимое считается УЖЕ зашифрованным (а вы думали чудеса только в сказке встречаются), поэтому никаких предвартельных подготовок не требуется. Необходимо дополнительно указывать опцию [--type plain].

6.6.3.4. Открытие. Применив команду [open] к файлу [disk.buratino] и указав имя открываем устройство [buratino] "окно". Не забываем подтвердить ключ/пароль, ах да, мы же ключ/пароль даже не задавали, поверьте мне на слово, в программу интегрированы телепатические возможности и любой набор пройдет (все равно не верите в чудеса?).


example > cryptsetup -v --type plain open /tmp/disk.buratino buratino
Enter passphrase for /tmp/disk.buratino:
Command successful.


6.6.3.5. Проверяем появление устройства с именем [buratino] в каталоге устройств [dev/mapper].


example > ls -l /dev/mapper/
total 0
lrwxrwxrwx 1 root root       7 Apr  6 20:13 buratino -> ../dm-*


6.6.3.6. Посмотрим на содержимое устройства по имени [buratino] и осознаем, что если для подготовки использовать [zero] вместо [urandom] пароль легко вычислить.


example > xxd -g 1 /dev/mapper/buratino
00000000: 7f 36 02 12 27 bf 70 fd 94 de cb 1b 2d 3e c3 07  .6..'.p.....->..
00000010: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
00000020: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
00000030: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
00000040: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
00000050: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
00000060: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
00000070: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
00000080: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
00000090: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
... вах-вах-вах ...
009c3f60: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
009c3f70: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
009c3f80: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
009c3f90: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
009c3fa0: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
009c3fb0: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
009c3fc0: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
009c3fd0: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
009c3fe0: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
009c3ff0: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....


6.6.3.7. Создадим Файловую систему [fat] на устройстве по имени [buratino].


example > mkfs.fat -v /dev/mapper/buratino 
mkfs.fat *.* (****-**-**)
/dev/mapper/buratino has 64 heads and 32 sectors per track,
hidden sectors 0x0000;
logical sector size is 512,
using 0xf8 media descriptor, with 20000 sectors;
drive number 0x80;
filesystem has 2 16-bit FATs and 4 sectors per cluster.
FAT size is 20 sectors, and provides 4981 clusters.
There are 4 reserved sectors.
Root directory contains 512 slots and uses 32 sectors.
Volume ID is 2d852375, no volume label.


6.6.3.8. Посмотрим на содержимое устрйства по имени [buratino].


example > xxd -g 1 /dev/mapper/buratino
00000000: eb 3c 90 6d 6b 66 73 2e 66 61 74 00 02 04 04 00  .<.mkfs.fat.....
00000010: 02 00 02 20 4e f8 14 00 20 00 40 00 00 00 00 00  ... N... .@.....
00000020: 00 00 00 00 80 00 29 75 23 85 2d 4e 4f 20 4e 41  ......)u#.-NO NA
00000030: 4d 45 20 20 20 20 46 41 54 31 36 20 20 20 0e 1f  ME    FAT16   ..
00000040: be 5b 7c ac 22 c0 74 0b 56 b4 0e bb 07 00 cd 10  .[|.".t.V.......
00000050: 5e eb f0 32 e4 cd 16 cd 19 eb fe 54 68 69 73 20  ^..2.......This 
00000060: 69 73 20 6e 6f 74 20 61 20 62 6f 6f 74 61 62 6c  is not a bootabl
00000070: 65 20 64 69 73 6b 2e 20 20 50 6c 65 61 73 65 20  e disk.  Please 
00000080: 69 6e 73 65 72 74 20 61 20 62 6f 6f 74 61 62 6c  insert a bootabl
00000090: 65 20 66 6c 6f 70 70 79 20 61 6e 64 0d 0a 70 72  e floppy and..pr
... хм-хм-хм ...
009c3f60: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
009c3f70: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
009c3f80: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
009c3f90: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
009c3fa0: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
009c3fb0: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
009c3fc0: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
009c3fd0: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
009c3fe0: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....
009c3ff0: 2b 56 95 22 8e c2 62 f1 e9 14 e0 57 91 f0 8c f5  +V."..b....W....


    Круто, тут уже [FAT16].

6.6.3.9. Посмотрим на содержимое файла [disk.buratino], видим некие изменения не более того, а вы не верили что содержимое уже было зашифровано, вот до чего дошел прогресс, вы только собрались создать защищенное хранилище, а содержимое уже зашифровано, какой ключ/пароль не вводи, а пропускает, но самое главное ОНО РАБОТАЕТ.


example > xxd -g 1 /tmp/disk.buratino
00000000: 96 18 25 7a 2b 7a c5 1a c0 6f ec 3c 76 f6 7b 09  ..%z+z...o.<v.{.
00000010: 89 15 75 cf 6f b2 52 59 2f 50 ea a7 f3 f1 f3 e8  ..u.o.RY/P......
00000020: 92 77 e0 89 64 7c 48 3b 08 d0 4d e2 24 a2 23 39  .w..d|H;..M.$.#9
00000030: df 4f 2a 0b 0b 92 dd 66 8a 14 8a 7a a0 4e f6 a8  .O*....f...z.N..
00000040: c0 bc 0b d9 9a d5 b7 f1 90 82 2a b0 56 b1 87 a3  ..........*.V...
00000050: ea 57 e5 00 3f f9 b3 5e cc e4 28 61 84 bb ae d1  .W..?..^..(a....
00000060: 6a 74 f2 f6 8a 32 98 c9 73 dc 91 51 52 9c e6 dd  jt...2..s..QR...
00000070: 5a a4 21 b7 d6 44 dc 43 87 b2 3f 6d b5 8a 04 46  Z.!..D.C..?m...F
00000080: 0a 75 76 3b dd 45 cb c7 89 5a af 57 d8 c1 2d c3  .uv;.E...Z.W..-.
00000090: c3 c3 d9 fb 18 38 6f 02 ba fc 9b f3 b7 6c 1f 0f  .....8o......l..
... так-так-так ...
009c3f60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3f70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3f80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3f90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fa0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
009c3ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................


6.6.3.10. Создадим каталог [dir_buratino].


example > mkdir -v /tmp/dir_buratino
mkdir: created directory 'dir_buratino'


6.6.3.11. Проверим содержимое каталога [/tmp] на наличие созданного каталога [dir_buratino].


example > ls -l /tmp
total 30008
drwxr-xr-x 2 root root     4096 Apr  6 20:13 dir_buratino
drwxr-xr-x 2 root root     4096 Apr  6 20:13 dir_malvina
-rw-r--r-- 1 root root 10240000 Apr  6 20:13 disk.buratino
-rw-r--r-- 1 root root 10240000 Apr  6 20:13 disk.def
-rw-r--r-- 1 root root 10240000 Apr  6 20:13 disk.malvina


6.6.3.12. Смонтируем устройство по имени [buratino] в каталог [dir_buratino].


example > mount -v /dev/mapper/buratino /tmp/dir_buratino/
mount: /dev/mapper/buratino mounted on /tmp/dir_buratino.


6.6.3.13. Проверяем, РАЗ.


example > mount | grep buratino
/dev/mapper/buratino on /tmp/dir_buratino type vfat (rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=ascii,shortname=mixed,utf8,errors=remount-ro)


6.6.3.14. Проверяем, ДВА, и обращаем внимание на использованное пространство (Used).


example > df | grep buratino
Filesystem           1K-blocks      Used Available Use% Mounted on
/dev/mapper/buratino      9962         0      9962   0% /tmp/dir_buratino


6.6.3.15. Проверяем содержимое каталога [dir_buratino], а по сути защишенного хранилища стандартными средствами ОС.


example > ls -l /tmp/dir_buratino
total 0


6.6.3.16. Командой [echo] создадим файл [you.txt].


example > echo "987654321" > /tmp/dir_buratino/you.txt


6.6.3.17. Проверяем содержимое каталога [dir_buratino] на наличие созданного файла [you.txt].


example > ls -l /tmp/dir_buratino
total 2
-rwxr-xr-x 1 root root 10 Apr  6 20:13 you.txt


6.6.3.18. Посмотрим на содержимое файла [you.txt] одним инструментом.


example > cat /tmp/dir_buratino/you.txt 
987654321


6.6.3.19. Посмотрим содержимое файла [you.txt] другим инструментом.


example > xxd -g 1 /tmp/dir_buratino/you.txt 
00000000: 39 38 37 36 35 34 33 32 31 0a                    987654321.


6.6.3.20. Проверяем параметр использованного пространства (Used).


example > df
Filesystem           1K-blocks      Used Available Use% Mounted on
/dev/mapper/buratino      9962         2      9960   1% /tmp/dir_buratino


6.6.3.21. Размонтируем устройство по имени [buratino].


example > umount -v /dev/mapper/buratino 
umount: /tmp/dir_buratino (/dev/mapper/buratino) unmounted


6.6.3.22. Применив команду [close] к устройству по имени [buratino] закроем "окно".


example > cryptsetup -v --type plain close /dev/mapper/buratino
Command successful.


6.6.3.23. Проверяем отсутствие закрытого устройства по имени [buratino].


example > ls -l /dev/mapper/
total 0


6.6.3.24. Обратите внимание, что ничто не выдает применение шифрования и содержимое файла очень напоминает набор псевдослучайных чисел из устройства псевдослучайных чисел [urandom]. Сравните.


example > xxd -g 1 -l 256 /dev/urandom
00000000: dd 56 9e 6a 1b a6 aa ac 2d c2 67 42 a4 ab 0b 74  .V.j....-.gB...t
00000010: 2c 9a 5f 71 3a ff f8 7b 37 46 d8 48 50 d2 a0 4f  ,._q:..{7F.HP..O
00000020: fc c1 a0 89 b4 53 53 59 14 70 6a c0 13 83 e4 04  .....SSY.pj.....
00000030: 41 79 94 68 12 07 f8 4e ed 62 f8 36 5a ba b5 5d  Ay.h...N.b.6Z..]
00000040: d7 69 d7 e4 4a 2b 4d 19 21 ce 61 18 b4 e8 ac e1  .i..J+M.!.a.....
00000050: 75 3a cc ac 37 96 91 54 cd 98 74 12 17 4c 6a 3d  u:..7..T..t..Lj=
00000060: 1d 02 58 58 9c e6 e8 3a c8 e2 9e 34 1c b4 0a c8  ..XX...:...4....
00000070: 9b af 4a 11 1d 20 ec 95 6c 8c 6b 0b 9a 56 93 40  ..J.. ..l.k..V.@
00000080: 9a 97 9a d0 31 da 5d cc 24 2a 51 7e 3e ba 4d 30  ....1.].$*Q~>.M0
00000090: 7d 57 05 17 5d ea df 2c 29 46 2a 3a f4 0f dc dd  }W..]..,)F*:....
000000a0: b0 50 98 03 c7 f5 e8 4d ce 54 d9 37 54 63 5a c3  .P.....M.T.7TcZ.
000000b0: 9d 59 45 d1 f6 34 5b 30 09 da a8 06 9c 40 de 08  .YE..4[0.....@..
000000c0: 44 d1 98 18 61 fa 77 47 39 27 49 96 06 6c b8 f7  D...a.wG9'I..l..
000000d0: bc 7c fc 2d 89 07 f6 f9 a4 07 b5 94 12 24 96 6d  .|.-.........$.m
000000e0: 5b a5 f8 43 e5 5a 3f d0 d2 0d a9 6f ba eb 4b 21  [..C.Z?....o..K!
000000f0: 96 7e 85 e5 d9 b2 6b 0b bb cb 93 49 40 50 f4 e6  .~....k....I@P..


6.6.3.25. Данный режим ограничен использованием одного ключа/пароля, отсутствует "присыпка" (сам не знаю что это такое, но вот внутренний дискомфорт...), предположив использование определенной ФС относительно легко вычислить ключ/пароль.

6.6.4. Опции.

    Внимательно изучите, вникните в каждую имеющуюся опцию. С каждой освоенной опцией вы почувствуете насколько пластичней может быть результат. Осознав возможности инструмента, подобно детскому конструктору, сможете воплотить любую вашу бурную фантазию и чем она будет не логичней и не адекватней - ТЕМ ЛУЧШЕ.

6.7. "Замки на ваших дверях не имеют смысла, если вы их не запираете." ист.lxf-2006-79.

6.8. Консольный доступ.

    Обычный пользователь не желает в руках держать ничего тяжелее мышки, возможно это вынужденная мера, и тем самым ограничивает предоставляемую гибкость инструментов имеющих консольный доступ. Консольный доступ может оказаться одной из составляющих реализации защиты "Карточный домик".

6.9. Level 6

     Освойте в совершенстве и крепко держитесь за 6 уровень по CS.

------------- ---- ------

Copyright (C) 1990-2018 Free Software DavydovMA

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
